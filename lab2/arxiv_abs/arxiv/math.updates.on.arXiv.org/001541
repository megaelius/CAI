Following the groundbreaking works of Moser and Tardos~\cite{M,MT} that made the Lov\'asz Local
Lemma (LLL) constructive, a series of works have exploited key ideas of their analysis to come up
with a plethora of results. A first line of works employs the entropy compression method to analyze
stochastic search algorithm similar to the Moser-Tardos algorithm but without explicitly referring
to a specific version of the LLL. Such an example is a class of backtracking algorithms for Constraint
Satisfaction Problems (CSPs) introduced by Grytczuk, Kozik and Micek~\cite{djm}, and later approached
more systematically by the work of Esperet and Parraeu~\cite{ac}, which have found applications
in a wide variety of problems. A different series of works exploit a key ingredient of the original
analysis of Moser and Tardos, the witness tree lemma, in order to: derive deterministic and parallel
algorithms for the LLL, to estimate the entropy of the output distribution, to partially avoid bad
events and to deal with super-polynomially many bad events. Unfortunately, these results do not
extend to the most general algorithmic LLL frameworks~\cite{AI,HV}. Mainly, this is because the
witness tree lemma, provably, no longer holds. Our first contribution is to extend the framework
of Achlioptas and Iliopoulos~\cite{AI} and provide a Local Lemma criterion that can capture every
application of backtracking algorithms we are aware of and more. Our second contribution is to show
that for commutative algorithms, a class recently introduced by Kolmogorov, the witness tree lemma
holds. Armed with this fact, we extend the main result of Haeupler, Saha, and Srinivasan~\cite{HSS}
to commutative algorithms, establishing that the output of such algorithms well-approximates
the LLL-distribution. Moreover, we define a class of commutative backtracking algorithms and
show that we can get similar results. 