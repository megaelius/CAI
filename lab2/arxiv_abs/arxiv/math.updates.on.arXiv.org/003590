The last decade has witnessed an unprecedented growth in the demand for data-driven real-time services.
These services are fueled by emerging applications that require rapidly injecting data streams
and computing updated analytics results in real-time. In many of such applications, the computing
resources are often shared for processing both updates from information sources and queries from
end users. This requires joint scheduling of updates and queries because the service provider needs
to make a critical decision upon receiving a user query: either it responds immediately with currently
available but possibly stale information, or it first processes new updates and then responds with
fresher information. Hence, the tradeoff between service performance and information freshness
naturally arises in this context. To that end, we propose a simple single-server two-queue model
that captures the coupled scheduling of updates and queries and aim to design scheduling policies
that can properly address the important tradeoff between performance and freshness. Specifically,
we consider the response time as a performance metric and the Age of Information (AoI) as a freshness
metric. After demonstrating the limitations of the simplest FCFS policy, we propose two threshold-based
policies: the Query-k policy that prioritizes queries and the Update-k policy that prioritizes
updates. Then, we rigorously analyze both the response time and the Peak AoI (PAoI) of the threshold-based
policies. Further, we propose the Joint-(M,N) policy, which allows flexibly prioritizing updates
or queries through choosing different values of two thresholds M and N. Finally, we conduct simulations
to evaluate the response time and the PAoI of the proposed policies. The results show that our proposed
threshold-based policies can effectively control the balance between performance and freshness.
