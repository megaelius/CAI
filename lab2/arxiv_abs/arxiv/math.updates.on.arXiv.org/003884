Modern authentication systems store hashed values of passwords of users using cryptographic hash
functions. Therefore, to crack a password an attacker needs to guess a hash function input that is
mapped to the hashed value, as opposed to the password itself. We call a hash function that maps the
same number of inputs to each bin, as \textbf{unbiased}. However, cryptographic hash functions
in use have not been proven to be unbiased (i.e., they may have an unequal number of inputs mapped to
different bins). A cryptographic hash function has the property that it is computationally difficult
to find an input mapped to a bin. In this work we introduce a structured notion of biased hash functions
for which we analyze the average guesswork under certain types of brute force attacks. This work
shows that the level of security depends on the set of hashed values of valid users as well as the statistical
profile of a hash function, resulting from bias. We examine the average guesswork conditioned on
the set of hashed values, and model the statistical profile through the empirical distribution
of the number of inputs that are mapped to a bin. In particular, we focus on a class of statistical profiles
(capturing the bias) , which we call type-class statistical profiles, that has an empirical distribution
related to the probability of the type classes defined in the method of types. For such profiles,
we show that the average guesswork is related to basic measures in information theory such as entropy
and divergence. We use this to show that the effect of bias on the conditional average guesswork is
limited compared to other system parameters such as the number of valid users who store their hashed
passwords in the system. 