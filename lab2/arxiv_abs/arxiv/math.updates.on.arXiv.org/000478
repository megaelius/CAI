This paper presents constructive proofs of some interesting properties of the primes of Boolean
functions that relate to the problem of finding a minimum-cost sum-of-primes representation of
a Boolean function f. A set of primes whose sum equals f is called a basis for f. The algorithms construct
the following canonical partition of the complete set of primes for f. (1) Essential primes, which
are primes that must be part of any basis for f. (2) Unnecessary primes, which can not be part of a minimum-cost
basis for f for any positive additive cost function. (3) Canonical disjoint sets of primes, PS1,...
PSN, such that a minimum-cost basis for any positive additive cost function C consists of the union
of the Essential primes with subsets of the PSi. The algorithms also construct a matrix of covering
relationships, Ti, for each PSi. A minimum-cost basis for a given cost function C consists of the
Essential primes and subsets QSi contained in PSi that are determined by C and the Ti. The key to the
results is the study of objects called ancestor sets. The Ancestor Theorem proves that every minimum-cost
prime cover for the non-free primes consists of a minimum-cost cover for the set of primes in ancestor
set A plus a minimum-cost cover for the set of primes that are not in A. The PSi are the primes in special
canonical independent ancestor sets Ai. The independent ancestor sets are easy to generate when
the calculation of the primes is within computational scope. (The worst-case estimate of the total
number of primes associated with a logic function is exponential.) If the complexity of computing
the primes via iterated consensus is B, then the algorithms in the paper are bounded by B-squared*(log)(B).
