This paper addresses three relevant issues arising in designing Chase-type algorithms for Reed-Solomon
codes: 1) how to choose the set of testing patterns; 2) given the set of testing patterns, what is the
optimal testing order in the sense that the most-likely codeword is expected to appear earlier;
and 3) how to identify the most-likely codeword. A new Chase-type soft-decision decoding algorithm
is proposed, referred to as tree-based Chase-type algorithm. The proposed algorithm takes the
set of all vectors as the set of testing patterns, and hence definitely delivers the most-likely
codeword provided that the computational resources are allowed. All the testing patterns are arranged
in an ordered rooted tree according to the likelihood bounds of the possibly generated codewords.
While performing the algorithm, the ordered rooted tree is constructed progressively by adding
at most two leafs at each trial. The ordered tree naturally induces a sufficient condition for the
most-likely codeword. That is, whenever the proposed algorithm exits before a preset maximum number
of trials is reached, the output codeword must be the most-likely one. When the proposed algorithm
is combined with Guruswami-Sudan (GS) algorithm, each trial can be implement in an extremely simple
way by removing one old point and interpolating one new point. Simulation results show that the proposed
algorithm performs better than the recently proposed Chase-type algorithm by Bellorado et al with
less trials given that the maximum number of trials is the same. Also proposed are simulation-based
performance bounds on the MLD algorithm, which are utilized to illustrate the near-optimality
of the proposed algorithm in the high SNR region. In addition, the proposed algorithm admits decoding
with a likelihood threshold, that searches the most-likely codeword within an Euclidean sphere
rather than a Hamming sphere. 