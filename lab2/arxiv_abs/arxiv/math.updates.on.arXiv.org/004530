Scientific computations or measurements may result in huge volumes of data. Often these can be thought
of representing a real-valued function on a high-dimensional domain, and can be conceptually arranged
in the format of a tensor of high degree in some truncated or lossy compressed format. We look at some
common post-processing tasks which are not obvious in the compressed format, as such huge data sets
can not be stored in their entirety, and the value of an element is not readily accessible through
simple look-up. The tasks we consider are finding the location of maximum or minimum, or minimum
and maximum of a function of the data, or finding the indices of all elements in some interval --- i.e.
level sets, the number of elements with a value in such a level set, the probability of an element being
in a particular level set, and the mean and variance of the total collection. The algorithms to be
described are fixed point iterations of particular functions of the tensor, which will then exhibit
the desired result. For this, the data is considered as an element of a high degree tensor space, although
in an abstract sense, the algorithms are independent of the representation of the data as a tensor.
All that we require is that the data can be considered as an element of an associative, commutative
algebra with an inner product. Such an algebra is isomorphic to a commutative sub-algebra of the
usual matrix algebra, allowing the use of matrix algorithms to accomplish the mentioned tasks.
We allow the actual computational representation to be a lossy compression, and we allow the algebra
operations to be performed in an approximate fashion, so as to maintain a high compression level.
One such example which we address explicitly is the representation of data as a tensor with compression
in the form of a low-rank representation. 