Synchronization strings are recently introduced by Haeupler and Shahrasb [HS17] in the study of
codes for correcting insertion and deletion errors. A synchronization string is an encoding of
the indices of the symbols in a string, and together with an appropriate decoding algorithm it can
transform insertion and deletion errors into standard symbol erasures and corruptions. This reduces
the problem of constructing codes for insertion and deletion errors to the problem of constructing
standard error correcting codes, which is much better understood. Besides this, synchronization
strings are also useful in other applications such as synchronization sequences and interactive
coding schemes. Amazingly, Haeupler and Shahrasb [HS17] showed that for any error parameter $\varepsilon>0$,
synchronization strings of arbitrary length exist over an alphabet whose size depends only on $\varepsilon$.
Specifically, [HS17] obtained an alphabet size of $O(\varepsilon^{-4})$, as well as a randomized
algorithm to construct such a synchronization string with length $n$ in expected time $O(n^5)$.
However, it remains an interesting question to find deterministic and more efficient constructions.
In this paper, we improve the construction in [HS17] in three aspects: we achieve a smaller alphabet
size, a deterministic construction, and a faster algorithm to construct synchronization strings.
Along the way we introduce a new combinatorial object, and establish a new connection between synchronization
strings and codes for insertion and deletion errors --- such codes can be used in a simple way to construct
synchronization strings. This new connection complements the connection found in [HS17], and
may be of independent interest. 