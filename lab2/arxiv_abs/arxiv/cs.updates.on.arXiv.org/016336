We consider the problem of secure distributed matrix computation (SDMC), where a \textit{user}
can query a function of data matrices generated at distributed \textit{source} nodes. We assume
the availability of $N$ honest but curious computation servers, which are connected to the sources,
the user, and each other through orthogonal and reliable communication links. Our goal is to minimize
the amount of data that must be transmitted from the sources to the servers, called the \textit{upload
cost}, while guaranteeing that no $T$ colluding servers can learn any information about the source
matrices, and the user cannot learn any information beyond the computation result. We first focus
on secure distributed matrix multiplication (SDMM), considering two matrices, and propose a novel
polynomial coding scheme using the properties of finite field discrete Fourier transform, which
achieves an upload cost significantly lower than the existing results in the literature. We then
generalize the proposed scheme to include straggler mitigation, as well as to the multiplication
of multiple matrices while keeping the input matrices, the intermediate computation results,
as well as the final result secure against any $T$ colluding servers. We also consider a special case,
called computation with own data, where the data matrices used for computation belong to the user.
In this case, we drop the security requirement against the user, and show that the proposed scheme
achieves the minimal upload cost. We then propose methods for performing other common matrix computations
securely on distributed servers, including changing the parameters of secret sharing, matrix
transpose, matrix exponentiation, solving a linear system, and matrix inversion, which are then
used to show how arbitrary matrix polynomials can be computed securely on distributed servers using
the proposed procedure. 