In the near future the SCM is predicted to modify the form of new programs, the access form to storage,
and the way that storage devices themselves are built. Therefore, a combination between the SCM
and a designated Memory Allocation Manager (MAM) that will allow the programmer to manually control
the different memories in the memory hierarchy will be likely to achieve a new level of performance
for memory-aware data structures. Although the manual MAM seems to be the optimal approach for multi-level
memory hierarchy management, this technique is still very far from being realistic, and the chances
that it would be implemented in current codes using High Performance Computing (HPC) platforms
is quite low. This premise means that the most reasonable way to introduce the SCM into any usable
and popular memory system would be by implementing an automated version of the MAM using the fundamentals
of paging algorithms, as used for two-level memory hierarchy. Our hypothesis is that achieving
appropriate transferability between memory levels may be possible using ideas of algorithms employed
in current virtual memory systems, and that the adaptation of those algorithms from a two-level
memory hierarchy to an N-level memory hierarchy is possible. In order to reach the conclusion that
our hypothesis is correct, we investigated various paging algorithms, and found the ones that could
be adapted successfully from two-level memory hierarchy to an N-level memory hierarchy. We discovered
that using an adaptation of the Aging paging algorithm to an N-level memory hierarchy results in
the best performances in terms of Hit/Miss ratio. In order to verify our hypothesis we build a simulator
called "DeMemory simulator" for analyzing our algorithms as well as for other algorithms that will
be devised in the future. 