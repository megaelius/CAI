Model-based development is a widely-used method to describe complex systems that enables the rapid
prototyping. Advances in the science of distributed systems has led to the development of large
scale statechart models which are distributed among multiple locations. Taking medicine for example,
models of best-practice guidelines during rural ambulance transport are distributed across hospital
settings from a rural hospital, to an ambulance, to a central tertiary hospital. Unfortunately,
these medical models require continuous and real-time communication across individual medical
models in physically distributed treatment locations which provides vital assistance to the clinicians
and physicians. This makes it necessary to offer methods for model-driven communication and synchronization
in a distributed environment. In this paper, we describe ModelSink, a middleware to address the
problem of communication and synchronization of heterogeneous distributed models. Being motivated
by the synchronization requirements during emergency ambulance transport, we use medical best-practice
models as a case study to illustrate the notion of distributed models. Through ModelSink, we achieve
an efficient communication architecture, open-loop-safe protocol, and queuing and mapping mechanisms
compliant with the semantics of statechart-based model-driven development. We evaluated the
performance of ModelSink on distributed sets of medical models that we have developed to assess
how ModelSink performs in various loads. Our work is intended to assist clinicians, EMT, and medical
staff to prevent unintended deviations from medical best practices, and overcome connectivity
and coordination challenges that exist in a distributed hospital network. Our practice suggests
that there are in fact additional potential domains beyond medicine where our middleware can provide
needed utility. 