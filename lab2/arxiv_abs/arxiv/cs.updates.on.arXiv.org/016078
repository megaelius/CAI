In the Shortest Common Superstring (SCS) problem, one is given a collection of strings, and needs
to find a shortest string containing each of them as a substring. SCS admits $2\frac{11}{23}$-approximation
in polynomial time (Mucha, SODA'13). While this algorithm and its analysis are technically involved,
the 30 years old Greedy Conjecture claims that the trivial and efficient Greedy Algorithm gives
a 2-approximation for SCS. We develop a graph-theoretic framework for studying approximation
algorithms for SCS. The framework is reminiscent of the classical 2-approximation for Traveling
Salesman: take two copies of an optimal solution, apply a trivial edge-collapsing procedure, and
get an approximate solution. In this framework, we observe two surprising properties of SCS solutions,
and we conjecture that they hold for all input instances. The first conjecture, that we call Collapsing
Superstring conjecture, claims that there is an elementary way to transform any solution repeated
twice into the same graph $G$. This conjecture would give an elementary 2-approximate algorithm
for SCS. The second conjecture claims that not only the resulting graph $G$ is the same for all solutions,
but that $G$ can be computed by an elementary greedy procedure called Greedy Hierarchical Algorithm.
While the second conjecture clearly implies the first one, perhaps surprisingly we prove their
equivalence. We support these equivalent conjectures by giving a proof for the special case where
all input strings have length at most 3. We prove that the standard Greedy Conjecture implies Greedy
Hierarchical Conjecture, while the latter is sufficient for an efficient greedy 2-approximate
approximation of SCS. Except for its (conjectured) good approximation ratio, the Greedy Hierarchical
Algorithm provably finds a 3.5-approximation. 