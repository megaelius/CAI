Powerful results from the theory of integer programming have recently led to substantial advances
in parameterized complexity. However, our perception is that, except for Lenstra's algorithm
for solving integer linear programming in fixed dimension, there is still little understanding
in the parameterized complexity community of the strengths and limitations of the available tools.
This is understandable: it is often difficult to infer exact runtimes or even the distinction between
FPT and XP algorithms, and some knowledge is simply unwritten folklore in a different community.
We wish to make a step in remedying this situation. To that end, we first provide an easy to navigate
quick reference guide of integer programming algorithms from the perspective of parameterized
complexity. Then, we show their applications in three case studies, obtaining FPT algorithms with
runtime $f(k)poly(n)$. We focus on: * Modeling: since the algorithmic results follow by applying
existing algorithms to new models, we shift the focus from the complexity result to the modeling
result, highlighting common patterns and tricks which are used. * Optimality program: after giving
an FPT algorithm, we are interested in reducing the dependence on the parameter; we show which algorithms
and tricks are often useful for speed-ups. * Minding the poly(n): reducing $f(k)$ often has the unintended
consequence of increasing poly(n); so we highlight the common trade-offs and show how to get the
best of both worlds. Specifically, we consider graphs of bounded neighborhood diversity which
are in a sense the simplest of dense graphs, and we show several FPT algorithms for Capacitated Dominating
Set, Sum Coloring, and Max-q-Cut by modeling them as convex programs in fixed dimension, n-fold
integer programs, bounded dual treewidth programs, and indefinite quadratic programs in fixed
dimension. 