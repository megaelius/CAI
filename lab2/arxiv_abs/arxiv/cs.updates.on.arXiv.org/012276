With recent advancements in edge computing capabilities, there has been a significant increase
in utilizing the edge cloud for event-driven and time-sensitive computations. However, large-scale
edge computing networks can suffer substantially from unpredictable and unreliable computing
resources which can result in high variability of service quality. Thus, it is crucial to design
efficient task scheduling policies that guarantee quality of service and the timeliness of computation
queries. In this paper, we study the problem of computation offloading over unknown edge cloud networks
with a sequence of timely computation jobs. Motivated by the MapReduce computation paradigm, we
assume each computation job can be partitioned to smaller Map functions that are processed at the
edge, and the Reduce function is computed at the user after the Map results are collected from the
edge nodes. We model the service quality (success probability of returning result back to the user
within deadline) of each edge device as function of context (collection of factors that affect edge
devices). The user decides the computations to offload to each device with the goal of receiving
a recoverable set of computation results in the given deadline. Our goal is to design an efficient
edge computing policy in the dark without the knowledge of the context or computation capabilities
of each device. By leveraging the \emph{coded computing} framework in order to tackle failures
or stragglers in computation, we formulate this problem using contextual-combinatorial multi-armed
bandits (CC-MAB), and aim to maximize the cumulative expected reward. We propose an online learning
policy called \emph{online coded edge computing policy}, which provably achieves asymptotically-optimal
performance in terms of regret loss compared with the optimal offline policy for the proposed CC-MAB
problem. 