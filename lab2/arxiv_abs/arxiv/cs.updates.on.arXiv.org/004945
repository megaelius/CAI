A cooperative group optimization (CGO) system is presented to implement CGO cases by integrating
the advantages of the cooperative group and low-level algorithm portfolio design. Following the
nature-inspired paradigm of a cooperative group, the agents not only explore in a parallel way with
their individual memory, but also cooperate with their peers through the group memory. Each agent
holds a portfolio of (heterogeneous) embedded search heuristics (ESHs), in which each ESH can drive
the group into a stand-alone CGO case, and hybrid CGO cases in an algorithmic space can be defined
by low-level cooperative search among a portfolio of ESHs through customized memory sharing. The
optimization process might also be facilitated by a passive group leader through encoding knowledge
in the search landscape. Based on a concrete framework, CGO cases are defined by a script assembling
over instances of algorithmic components in a toolbox. A multilayer design of the script, with the
support of the inherent updatable graph in the memory protocol, enables a simple way to address the
challenge of accumulating heterogeneous ESHs and defining customized portfolios without any
additional code. The CGO system is implemented for solving the constrained optimization problem
with some generic components and only a few domain-specific components. Guided by the insights
from algorithm portfolio design, customized CGO cases based on basic search operators can achieve
competitive performance over existing algorithms as compared on a set of commonly-used benchmark
instances. This work might provide a basic step toward a user-oriented development framework,
since the algorithmic space might be easily evolved by accumulating competent ESHs. 