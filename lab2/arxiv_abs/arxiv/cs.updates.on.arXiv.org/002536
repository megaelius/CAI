Families of DFAs (FDFAs) provide an alternative formalism for recognizing $\omega$-regular languages.
The motivation for introducing them was a desired correlation between the automaton states and
right congruence relations, in a manner similar to the Myhill-Nerode theorem for regular languages.
This correlation is beneficial for learning algorithms, and indeed it was recently shown that $\omega$-regular
languages can be learned from membership and equivalence queries, using FDFAs as the acceptors.
In this paper, we look into the question of how suitable FDFAs are for defining omega-regular languages.
Specifically, we look into the complexity of performing Boolean operations, such as complementation
and intersection, on FDFAs, the complexity of solving decision problems, such as emptiness and
language containment, and the succinctness of FDFAs compared to standard deterministic and nondeterministic
$\omega$-automata. We show that FDFAs enjoy the benefits of deterministic automata with respect
to Boolean operations and decision problems. Namely, they can all be performed in nondeterministic
logarithmic space. We provide polynomial translations of deterministic B\"uchi and co-B\"uchi
automata to FDFAs and of FDFAs to nondeterministic B\"uchi automata (NBAs). We show that translation
of an NBA to an FDFA may involve an exponential blowup. Last, we show that FDFAs are more succinct than
deterministic parity automata (DPAs) in the sense that translating a DPA to an FDFA can always be
done with only a polynomial increase, yet the other direction involves an inevitable exponential
blowup in the worst case. 