Moving an autonomous agent through an unknown environment is one of the crucial problems for robotics
and network analysis. Therefore, it received a lot of attention in the last decades and was analyzed
in many different settings. The graph exploration problem is a theoretical and abstract model,
where an algorithm has to decide how the agent, also called explorer, moves through a network such
that every point of interest is visited at least once. For its decisions, the knowledge of the algorithm
is limited by the perception of the explorer. There are different models regarding the perception
of the explorer. We look at the fixed graph scenario proposed by Kalyanasundaram and Pruhs (Proc.
of ICALP, 1993), where the explorer starts at a vertex of the network and sees all reachable vertices,
their unique names and their distance from the current position. Therefore, the algorithm recognizes
already seen vertices and can adapt its strategy during exploring, because it does not forget anything.
Because the algorithm only learns the structure of the graph during computation, it cannot deterministically
compute an optimal tour that visits every vertex at least once without prior knowledge. Therefore,
we are interested in the amount of crucial a-priori information needed to solve the problem optimally,
which we measure in terms of the well-studied model of advice complexity. [..] We look at different
variations of the graph exploration problem and distinguish between directed or undirected edges,
cyclic or non-cyclic solutions, unit costs or individual costs for the edges and different amounts
of a-priori structural knowledge of the explorer. [..] In this work, we present algorithms with
an advice complexity of $\mathcal{O}(m+n)$, thus improving the classical bound for sparse graphs.
