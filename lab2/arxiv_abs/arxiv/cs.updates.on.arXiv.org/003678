Data-driven algorithm design, that is, choosing the best algorithm for a specific application,
is a crucial problem in modern data science. Practitioners often optimize over a parameterized
algorithm family, tuning parameters based on problems from their domain. These procedures have
historically come with no guarantees, though a recent line of work studies algorithm selection
from a theoretical perspective. We advance the foundations of this field in several directions:
we analyze online algorithm selection, where problems arrive one-by-one and the goal is to minimize
regret, and private algorithm selection, where the goal is to find good parameters over a set of problems
without revealing sensitive information contained therein. We study important algorithm families,
including SDP-rounding schemes for problems formulated as integer quadratic programs, and greedy
techniques for canonical subset selection problems. In these cases, the algorithm's performance
is a volatile and piecewise Lipschitz function of its parameters, since tweaking the parameters
can completely change the algorithm's behavior. We give a sufficient and general condition, dispersion,
defining a family of piecewise Lipschitz functions that can be optimized online and privately,
which includes the functions measuring the performance of the algorithms we study. Intuitively,
a set of piecewise Lipschitz functions is dispersed if no small region contains many of the functions'
discontinuities. We present general techniques for online and private optimization of the sum
of dispersed piecewise Lipschitz functions. We improve over the best-known regret bounds for a
variety of problems, prove regret bounds for problems not previously studied, and give matching
lower bounds. We also give matching upper and lower bounds on the utility loss due to privacy. Moreover,
we uncover dispersion in auction design and pricing problems. 