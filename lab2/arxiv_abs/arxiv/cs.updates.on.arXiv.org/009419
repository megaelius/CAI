We study the problem of allocating divisible bads (chores) among multiple agents with additive
utilities, when money transfers are not allowed. The competitive rule is known to be the best mechanism
for goods with additive utilities and was recently extended to chores by Bogomolnaia et al (2017).
For both goods and chores, the rule produces Pareto optimal and envy-free allocations. In the case
of goods, the outcome of the competitive rule can be easily computed. Competitive allocations solve
the Eisenberg-Gale convex program; hence the outcome is unique and can be approximately found by
standard gradient methods. An exact algorithm that runs in polynomial time in the number of agents
and goods was given by Orlin. In the case of chores, the competitive rule does not solve any convex
optimization problem; instead, competitive allocations correspond to local minima, local maxima,
and saddle points of the Nash Social Welfare on the Pareto frontier of the set of feasible utilities.
The rule becomes multivalued and none of the standard methods can be applied to compute its outcome.
In this paper, we show that all the outcomes of the competitive rule for chores can be computed in strongly
polynomial time if either the number of agents or the number of chores is fixed. The approach is based
on a combination of three ideas: all consumption graphs of Pareto optimal allocations can be listed
in polynomial time; for a given consumption graph, a candidate for a competitive allocation can
be constructed via explicit formula; and a given allocation can be checked for being competitive
using a maximum flow computation as in Devanur et al (2002). Our algorithm immediately gives an approximately-fair
allocation of indivisible chores by the rounding technique of Barman and Krishnamurthy (2018).
