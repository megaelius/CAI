Computing shortest paths is one of the central problems in the theory of distributed computing.
For the last few years, substantial progress has been made on the approximate single source shortest
paths problem, culminating in an algorithm of Becker et al. [DISC'17] which deterministically
computes $(1+o(1))$-approximate shortest paths in $\tilde O(D+\sqrt n)$ time, where $D$ is the
hop-diameter of the graph. Up to logarithmic factors, this time complexity is optimal, matching
the lower bound of Elkin [STOC'04]. The question of exact shortest paths however saw no algorithmic
progress for decades, until the recent breakthrough of Elkin [STOC'17], which established a sublinear-time
algorithm for exact single source shortest paths on undirected graphs. Shortly after, Huang et
al. [FOCS'17] provided improved algorithms for exact all pairs shortest paths problem on directed
graphs. In this paper, we present a new single-source shortest path algorithm with complexity $\tilde
O(n^{3/4}D^{1/4})$. For polylogarithmic $D$, this improves on Elkin's $\tilde{O}(n^{5/6})$
bound and gets closer to the $\tilde{\Omega}(n^{1/2})$ lower bound of Elkin [STOC'04]. For larger
values of $D$, we present an improved variant of our algorithm which achieves complexity $\tilde{O}\left(
n^{3/4+o(1)}+ \min\{ n^{3/4}D^{1/6},n^{6/7}\}+D\right)$, and thus compares favorably with
Elkin's bound of $\tilde{O}(n^{5/6} + n^{2/3}D^{1/3} + D ) $ in essentially the entire range of parameters.
This algorithm provides also a qualitative improvement, because it works for the more challenging
case of directed graphs (i.e., graphs where the two directions of an edge can have different weights),
constituting the first sublinear-time algorithm for directed graphs. Our algorithm also extends
to the case of exact $\kappa$-source shortest paths... 