The increased network flexibility introduced by new technologies, such as Software-Defined Networking,
let operators consider running their networks at higher utilization levels. Traditionally, networks
were operated at a small fraction of their capacities (30-40%); recently, however, operators are
considering running their networks harder (60% utilization and above). Higher utilization can
increase the network operator's revenue, but this gain comes at a cost: daily traffic fluctuations
and failures might overload the network. We call such network congestion situations Resource Crunch.
Dealing with Resource Crunch requires certain types of flexibility in the system. We focus on settings
with flexible bandwidth requirements, e.g., allocated connections can tolerate service degradation.
This can allow a new connection to be provisioned - a connection that would otherwise be blocked.
In these situations, the network operator needs to make an informed decision, since degrading a
high-paying connection to allocate a low-value connection is not sensible. We offer strategies
for deciding whether or not to serve a connection (and which other connections to degrade) focusing
on maximizing profits during Resource Crunch. Our solutions use a new abstraction of the network
state, called a Connection Adjacency Graph (CAG), to devise an efficient methods to decide whether
or not to serve a demand, and which other connections to degrade. The concept of CAG is further elaborated,
and we investigate an optional optional simplification step capable of reducing the problem's
complexity. Finally, we compare our method to existing greedy approaches and show that our method
outperforms them during Resource Crunch. 