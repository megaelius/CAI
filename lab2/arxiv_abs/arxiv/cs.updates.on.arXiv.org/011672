Computing an equilibrium of a game is of central interest in Algorithmic Game Theory. We study the
complexity of computing a PNE in Weighted Congestion Games with affine and linear delays, where
O(1)-approximate Nash equilibria can be computed in polynomial time and the only known PLS-hardness
results follow from those for unweighted Congestion Games. We first show that it is PLS-complete
to compute a PNE even in single-commodity Weighted Network Congestion Games on series-parallel
networks with linear latencies, a result indicating that equilibrium computation for Weighted
Congestion Games can be significantly more difficult than their unweighted counterparts. Note
that for unweighted Congestion Games on single-commodity series parallel networks with general
latency functions, a PNE can be computed by a simple greedy algorithm. For that reduction, we use
exponential coefficients on the linear latency functions. To investigate the impact of weighted
players only, we restrict the game so that the linear latencies can only have polynomial coefficients.
We show that it is PLS-complete to compute a PNE in Weighted Network Congestion Games with all edges
having the identity function. For the latter, none of the known PLS-complete problems seems as a
natural initial problem for the reduction. Hence, we consider the problem of finding a maximal cut
in NodeMaxCut, a natural special case of MaxCut where the weights of the edges are the product of the
weights of their endpoints. Via an involved reduction, we show that NodeMaxCut is PLS-complete,
so that we can use it as our initial problem. The result and the reduction themselves are of independent
interest and they may have more implications in proving other complexity results related to PLS.
