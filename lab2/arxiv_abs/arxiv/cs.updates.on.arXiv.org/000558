We improve complexity bounds for energy-efficient speed scheduling problems for both the single
processor and multi-processor cases. Energy conservation has become a major concern, so revisiting
traditional scheduling problems to take into account the energy consumption has been part of the
agenda of the scheduling community for the past few years. We consider the energy minimizing speed
scaling problem introduced by Yao et al. wherewhere we wish to schedule a set of jobs, each with a release
date, deadline and work volume, on a set of identical processors. The processors may change speed
as a function of time and the energy they consume is the alphath power of its speed. The objective is
then to find a feasible schedule which minimizes the total energy used. We show that in the setting
with an arbitrary number of processors where all work volumes are equal, there is a $2(1+\varepsilon)(5(1+\varepsilon))^{\alpha
-1}\tilde{B}_{\alpha}=O_{\alpha}(1)$ approximation algorithm, where $\tilde{B}_{\alpha}$
is the generalized Bell number. This is the first constant factor algorithm for this problem. This
algorithm extends to general unequal processor-dependent work volumes, up to losing a factor of
$(\frac{(1+r)r}{2})^{\alpha}$ in the approximation ratio, where r is the maximum ratio between
two work volumes. We then show this latter problem is APX- hard, even in the special case when all release
dates and deadlines are equal and r is 4. In the single processor case, we introduce a new linear programming
formulation of speed scaling and prove that its integrality gap is at most $12^{\alpha -1}$. As a
corollary, we obtain a $ (12 (1+\epsilon))^{\alpha -1} $ approximation algorithm where there is
a single processor, improving on the previous best bound of $2^{\alpha-1}(1+\varepsilon)^{\alpha}\tilde{B}_{\alpha}$
when $\alpha \ge 25$. 