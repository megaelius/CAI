We study the problem of finding a spanning forest in an undirected, $n$-vertex multi-graph under
two basic query models. One is the Linear query model which are linear measurements on the incidence
vector induced by the edges; the other is the weaker OR query model which only reveals whether a given
subset of plausible edges is empty or not. At the heart of our study lies a fundamental problem which
we call the {\em single element recovery} problem: given a non-negative real vector $x$ in $N$ dimension,
return a single element $x_j > 0$ from the support. Queries can be made in rounds, and our goals is to
understand the trade-offs between the query complexity and the rounds of adaptivity needed to solve
these problems, for both deterministic and randomized algorithms. These questions have connections
and ramifications to multiple areas such as sketching, streaming, graph reconstruction, and compressed
sensing. Our main results are: * For the single element recovery problem, it is easy to obtain a deterministic,
$r$-round algorithm which makes $(N^{1/r}-1)$-queries per-round. We prove that this is tight:
any $r$-round deterministic algorithm must make $\geq (N^{1/r} - 1)$ linear queries in some round.
In contrast, a $1$-round $O(\log^2 N)$-query randomized algorithm which succeeds 99% of the time
is known to exist. * We design a deterministic $O(r)$-round, $\tilde{O}(n^{1+1/r})$-OR query
algorithm for graph connectivity. We complement this with an $\tilde{\Omega}(n^{1 + 1/r})$-lower
bound for any $r$-round deterministic algorithm in the OR-model. * We design a randomized, $2$-round
algorithm for the graph connectivity problem which makes $\tilde{O}(n)$-OR queries. In contrast,
we prove that any $1$-round algorithm (possibly randomized) requires $\tilde{\Omega}(n^2)$-OR
queries. 