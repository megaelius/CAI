In genome rearrangements, the mutational event transposition swaps two adjacent blocks of genes
in one chromosome. The Transposition Distance Problem (TDP) aims to find the minimum number of transpositions
required to transform one chromosome into another, both represented as permutations. Setting
the target permutation as the identity permutation, makes the TDP equivalent to the problem of Sorting
by Transpositions. TDP is $\mathcal{NP}$-hard and the best approximation algorithm with a $1.375$
ratio was proposed in 2006 by Elias and Hartman. Their algorithm employs simplification, a technique
used to transform an input permutation $\pi$ into a simple permutation $\hat{\pi}$, obtained by
inserting new symbols into $\pi$ in a way that the lower bound of the transposition distance of $\pi$
is kept on $\hat{\pi}$. Besides a sequence of transpositions sorting $\hat{\pi}$ can be mimicked
to sort $\pi$. The assumption is that handling with simple permutations is easier than with normal
ones. In this work, we first show that the algorithm of Elias and Hartman may require one transposition
above the intended approximation ratio of $1.375$, depending on how the input permutation is simplified.
Then, using an algebraic formalism, we propose a new upper bound for the transposition distance.
From this result, a new $1.375$-approximation algorithm is proposed to solve TDP skipping simplification
and ensuring the approximation ratio of $1.375$ for all the permutations in the Symmetric Group
$S_n$. Implementations of our algorithm and of Elias and Hartman were tested with short permutations
of maximum length $12$. The results show that, in addition to keeping the approximation below the
$1.375$ ratio, our algorithm returns a higher rate of exact distances. 