Can we efficiently compute optimal solutions to instances of a hard problem from optimal solutions
to neighboring (i.e., locally modified) instances? For example, can we efficiently compute an
optimal coloring for a graph from optimal colorings for all one-edge-deleted subgraphs? Studying
such questions not only gives detailed insight into the structure of the problem itself, but also
into the complexity of related problems; most notably graph theory's core notion of critical graphs
(e.g., graphs whose chromatic number decreases under deletion of an arbitrary edge) and the complexity-theoretic
notion of minimality problems (also called criticality problems, e.g., recognizing graphs that
become 3-colorable when an arbitrary edge is deleted). We focus on two prototypical graph problems,
Colorability and Vertex Cover. For example, we show that it is NP-hard to compute an optimal coloring
for a graph from optimal colorings for all its one-vertex-deleted subgraphs, and that this remains
true even when optimal solutions for all one-edge-deleted subgraphs are given. In contrast, computing
an optimal coloring from all (or even just two) one-edge-added supergraphs is in P. We observe that
Vertex Cover exhibits a remarkably different behavior, demonstrating the power of our model to
delineate problems from each other more precisely on a structural level. Moreover, we provide a
number of new complexity results for minimality and criticality problems. For example, we prove
that Minimal-3-UnColorability is complete for DP (differences of NP sets), which was previously
known only for the more amenable case of deleting vertices rather than edges. For Vertex Cover, we
show that recognizing beta-vertex-critical graphs is complete for Theta_2^p (parallel access
to NP), obtaining the first completeness result for a criticality problem for this class. 