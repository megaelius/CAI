In this paper we investigate the computational power of a set of mobile robots with limited visibility.
At each iteration, a robot takes a snapshot of its surroundings, uses the snapshot to compute a destination
point, and it moves toward its destination. Each robot is punctiform and memoryless, it operates
in $\mathbb{R}^m$, it has a local reference system independent of the other robots' ones, and is
activated asynchronously by an adversarial scheduler. Moreover, robots are non-rigid, in that
they may be stopped by the scheduler at each move before reaching their destination (but are guaranteed
to travel at least a fixed unknown distance before being stopped). We show that despite these strong
limitations, it is possible to arrange $3m+3k$ of these weak entities in $\mathbb{R}^m$ to simulate
the behavior of a stronger robot that is rigid (i.e., it always reaches its destination) and is endowed
with $k$ registers of persistent memory, each of which can store a real number. We call this arrangement
a TuringMobile. In its simplest form, a TuringMobile consisting of only three robots can travel
in the plane and store and update a single real number. We also prove that this task is impossible with
fewer than three robots. Among the applications of the TuringMobile, we focused on Near-Gathering
(all robots have to gather in a small-enough disk) and Pattern Formation (of which Gathering is a
special case) with limited visibility. Interestingly, our investigation implies that both problems
are solvable in Euclidean spaces of any dimension, even if the visibility graph of the robots is initially
disconnected, provided that a small amount of these robots are arranged to form a TuringMobile.
In the special case of the plane, a basic TuringMobile of only three robots is sufficient. 