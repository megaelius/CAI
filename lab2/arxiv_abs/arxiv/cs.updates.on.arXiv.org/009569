The stability and performance of Cloud platforms are essential as they directly impact customers'
satisfaction. Cloud service providers use Cloud monitoring tools to ensure that rendered services
match the quality of service requirements indicated in established contracts such as service-level
agreements. Given the enormous number of resources that need to be monitored, highly scalable and
capable monitoring tools are designed and implemented by Cloud service providers such as Amazon,
Google, IBM, and Microsoft. Cloud monitoring tools monitor millions of virtual and physical resources
and continuously generate logs for each one of them. Considering that logs magnify any technical
issue, they can be used for disaster detection, prevention, and recovery. However, logs are useless
if they are not assessed and analyzed promptly. Thus, we argue that the scale of Cloud-generated
logs makes it impossible for DevOps teams to analyze them effectively. This implies that one needs
to automate the process of monitoring and analysis (e.g., using machine learning and artificial
intelligence). If the automation will witness an anomaly in the logs --- it will alert DevOps staff.
The automatic anomaly detectors require a reliable and scalable platform for gathering, filtering,
and transforming the logs, executing the detector models, and sending out the alerts to the DevOps
staff. In this work, we report on implementing a prototype of such a platform based on the 7-layered
architecture pattern, which leverages micro-service principles to distribute tasks among highly
scalable, resources-efficient modules. The modules interact with each other via an instance of
the Publish-Subscribe architectural pattern. The platform is deployed on the IBM Cloud service
infrastructure and is used to detect anomalies in logs emitted by the IBM Cloud services, hence the
dogfooding. 