Smart contracts are executable programs that enable the building of a programmable trust mechanism
between multiple entities without the need of a trusted third-party. Researchers have developed
several security scanners in the past couple of years. However, many of these analyzers either do
not scale well, or if they do, produce many false positives. This issue is exacerbated when bugs are
triggered only after a series of interactions with the functions of the contract-under-test. A
depth-n vulnerability, refers to a vulnerability that requires invoking a specific sequence of
n functions to trigger. Depth-n vulnerabilities are time-consuming to detect by existing automated
analyzers, because of the combinatorial explosion of sequences of functions that could be executed
on smart contracts. In this paper, we present a technique to analyze depth-n vulnerabilities in
an efficient and scalable way by combining symbolic execution and data dependency analysis. A significant
advantage of combining symbolic with static analysis is that it scales much better than symbolic
alone and does not have the problem of false positive that static analysis tools typically have.
We have implemented our technique in a tool called MPro, a scalable and automated smart contract
analyzer based on the existing symbolic analysis tool Mythril-Classic and the static analysis
tool Slither. We analyzed 100 randomly chosen smart contracts on MPro and our evaluation shows that
MPro is about n-times faster than Mythril-Classic for detecting depth-n vulnerabilities, while
preserving all the detection capabilities of Mythril-Classic. 