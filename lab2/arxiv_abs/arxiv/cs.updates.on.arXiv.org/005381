We investigate the scheduling of $n$ jobs divided into $c$ classes/batches on $m$ identical parallel
machines. For every class there is a sequence-independent setup time. This setup is required whenever
a machine switches from the processing of one class to another class. The objective is to find a schedule
that minimizes the makespan. We give near-linear approximation algorithms for the following problem
variants: the non-preemptive problem context where jobs may not be preempted, the preemptive context
where jobs may be preempted but not parallelized, as well as the splittable context where jobs may
be preempted and parallelized. We present the first algorithm improving the previously best approximation
ratio of $2$ to a better ratio of $3/2$ in the preemptive case. In more detail, for all three flavors
we present an approximation ratio $2$ with running time $\mathcal{O}(n)$, ratio $3/2+\epsilon$
in time $\mathcal{O}(n\log 1/\epsilon)$ as well as a ratio of $3/2$. The $(3/2)$-approximate algorithms
have different running times. For the non-preemptive case we get time $\mathcal{O}(n\log (n+\Delta))$
where $\Delta$ is the largest value of the input. The splittable approximation needs a running time
of $\mathcal{O}(n+c\log(c+m))$ whereas the algorithm for the preemptive context has a running
time $\mathcal{O}(n \log (c+m)) \leq \mathcal{O}(n \log n)$. So far, no PTAS is known for the preemptive
problem without restrictions, so we make progress towards that question. Recently Jansen et al.
found an EPTAS for the splittable and non-preemptive case but with impractical running times exponential
in $1/\epsilon$. 