This article introduces a novel approach to spatial database design. Instead of extending the canonical
Solid-Face-Edge-Vertex schema by, say, "hypersolids" these classes are generalised to a common
type SpatialEntity, and the individual BoundedBy relations between two consecutive classes are
generalised to one BoundedBy relation on SpatialEntity instances. Then the pair (SpatialEntity,
BoundedBy) is a so-called incidence graph. The novelty about this approach uses the observation
that an incidence graph represents a topological space of SpatialEntity instances because the
BoundedBy-relation defines a so-called Alexandrov topology for them turning them into a topological
space. So spatial data becomes part of mathematical topology and topology can be immediately applied
to spatial data. For example, continuous functions between two instances of spatial data allow
the consistent modelling of generalisation. Further, it is also possible to establish a formal
topological definition of spatial data dimension, and every topological data model of arbitrary
dimension gets a simple uniform data model. This model covers space-time, and the version history
of a spatial model can be represented by an Alexandrov topology, too. By integrating space, time,
version, and scale into one single schema, topological queries across those aspects are enabled
through topological constructions. In fact, the topological constructions cover a relationally
complete query language for spaces and can be redefined to operate accordingly on their graph representations.
With these observations a relational database schema for a spatial data model of dimension 6 and
more is developed. The schema seamlessly integrates 4D space-time, levels of detail and version
history, and it can be easily expanded to also contain non-spatial information or be linked to other
data sources. 