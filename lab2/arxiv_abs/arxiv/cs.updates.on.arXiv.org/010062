We develop a framework that creates a new polygonal mesh representation of the 3D domain of a layer-by-layer
3D printing job on which we identify single, continuous tool paths covering each connected piece
of the domain in every layer. We present a tool path algorithm that traverses each such continuous
tool path with no crossovers. The key construction at the heart of our framework is a novel Euler transformation
that we introduced recently in a separate manuscript. Our Euler transformation converts a 2-dimensional
cell complex K into a new 2-complex K^ such that every vertex in the 1-skeleton G^ of K^ has degree 4.
Hence G^ is Eulerian, and an Eulerian tour can be followed to print all edges in a continuous fashion
without stops. We start with a mesh K of the union of polygons obtained by projecting all layers to
the plane. First we compute its Euler transformation K^. In the slicing step, we clip K^ at each layer
i using its polygon to obtain K^_i. We then patch K^_i by adding edges such that any odd-degree nodes
created by slicing are transformed to have even degrees again. We print extra support edges in place
of any segments left out to ensure there are no edges without support in the next layer above. These
support edges maintain the Euler nature of K^_i. Finally, we describe a tree-based search algorithm
that builds the continuous tool path by traversing "concentric" cycles in the Euler complex. Our
algorithm produces a tool path that avoids material collisions and crossovers, and can be printed
in a continuous fashion irrespective of complex geometry or topology of the domain (e.g., holes).
