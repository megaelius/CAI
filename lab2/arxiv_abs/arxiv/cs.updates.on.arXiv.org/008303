We give parallel and distributed algorithms for the housing allocation problem. In this problem,
there is a set of agents and a set of houses. Each agent has a strict preference list for a subset of houses.
We need to find a matching such that some criterion is optimized. One such criterion is Pareto Optimality.
A matching is Pareto optimal if no coalition of agents can be strictly better off by exchanging houses
among themselves. We also study the housing market problem, a variant of the housing allocation
problem, where each agent initially owns a house. In addition to Pareto optimality, we are also interested
in finding the core of a housing market. A matching is in the core if there is no coalition of agents
that can be better off by breaking away from other agents and switching houses only among themselves.
In the first part of this work, we show that computing a Pareto optimal matching of a house allocation
is in {\bf CC} and computing the core of a housing market is {\bf CC}-hard. Given a matching, we also
show that verifying whether it is in the core can be done in {\bf NC}. We then give an algorithm to show
that computing a maximum Pareto optimal matching for the housing allocation problem is in {\bf RNC}^2
and quasi-{\bf NC}^2. In the second part of this work, we present a distributed version of the top
trading cycle algorithm for finding the core of a housing market. To that end, we first present two
algorithms for finding all the disjoint cycles in a functional graph: a Las Vegas algorithm which
terminates in $O(\log l)$ rounds with high probability, where $l$ is the length of the longest cycle,
and a deterministic algorithm which terminates in $O(\log^* n \log l)$ rounds, where $n$ is the number
of nodes in the graph. Both algorithms work in the synchronous distributed model and use messages
of size $O(\log n)$. 