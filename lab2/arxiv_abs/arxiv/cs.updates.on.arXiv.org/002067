Tree projections provide a unifying framework to deal with most structural decomposition methods
of constraint satisfaction problems (CSPs). Within this framework, a CSP instance is decomposed
into a number of sub-problems, called views, whose solutions are either already available or can
be computed efficiently. The goal is to arrange portions of these views in a tree-like structure,
called tree projection, which determines an efficiently solvable CSP instance equivalent to the
original one. Deciding whether a tree projection exists is NP-hard. Solution methods have therefore
been proposed in the literature that do not require a tree projection to be given, and that either
correctly decide whether the given CSP instance is satisfiable, or return that a tree projection
actually does not exist. These approaches had not been generalized so far on CSP extensions for optimization
problems, where the goal is to compute a solution of maximum value/minimum cost. The paper fills
the gap, by exhibiting a fixed-parameter polynomial-time algorithm that either disproves the
existence of tree projections or computes an optimal solution, with the parameter being the size
of the expression of the objective function to be optimized over all possible solutions (and not
the size of the whole constraint formula, used in related works). Tractability results are also
established for the problem of returning the best K solutions. Finally, parallel algorithms for
such optimization problems are proposed and analyzed. Given that the classes of acyclic hypergraphs,
hypergraphs of bounded treewidth, and hypergraphs of bounded generalized hypertree width are
all covered as special cases of the tree projection framework, the results in this paper directly
apply to these classes. These classes are extensively considered in the CSP setting, as well as in
conjunctive database query evaluation and optimization. 