In his seminal paper of 2004, Ulrich Junker proposed the QuickXPlain algorithm, which provides
a divide-and-conquer computation strategy to find within a given set an irreducible subset with
a particular (monotone) property. Beside its original application in the domain of constraint
satisfaction problems, the algorithm has since then found widespread adoption in areas as different
as model-based diagnosis, recommender systems, verification, or the Semantic Web. This popularity
is due to the frequent occurrence of the problem of finding irreducible subsets on the one hand, and
to QuickXPlain's general applicability and favorable computational complexity on the other hand.
However, although (we regularly experience) people are having a hard time understanding QuickXPlain
and seeing why it works correctly, a proof of correctness of the algorithm has never been published.
This is what we account for in this work, by explaining QuickXPlain in a novel tried and tested way
and by presenting an intelligible formal proof of it. Apart from showing the correctness of the algorithm
and excluding the later detection of errors (proof and trust effect), the added value of the availability
of a formal proof is, e.g., (i) that the workings of the algorithm often become completely clear only
after studying, verifying and comprehending the proof (didactic effect), (ii) the shown proof
methodology can be used as a guidance for proving other recursive algorithms (transfer effect),
and (iii) the possibility of providing "gapless" correctness proofs of systems that rely on (results
computed by) QuickXPlain, such as numerous model-based debuggers (completeness effect). 