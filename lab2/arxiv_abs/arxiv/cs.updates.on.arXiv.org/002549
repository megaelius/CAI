Our modern world produces an increasing quantity of data, and especially geospatial data, with
advance of sensing technologies, and growing complexity and organisation of vector data. Tools
are needed to efficiently create and edit those vector geospatial data. Procedural generation
has been a tool of choice to generate strongly organised data, yet it may be hard to control. Because
those data may be involved to take consequence-full real life decisions, user interactions are
required to check data and edit it. The classical process to do so would be to build an adhoc Graphical
User Interface (GUI) tool adapted for the model and method being used. This task is difficult, takes
a large amount of resources, and is very specific to one model, making it hard to share and re-use.
Besides, many common generic GUI already exists to edit vector data, each having its specialities.
We propose a change of paradigm; instead of building a specific tool for one task, we use common GIS
software as GUIs, and deport the specific interactions from the software to within the database.
In this paradigm, GIS software simply modify geometry and attributes of database layers, and those
changes are used by the database to perform automated task. This new paradigm has many advantages.
The first one is genericity. With in-base interaction, any GIS software can be used to perform edition,
whatever the software is a Desktop sofware or a web application. The second is concurrency and coherency.
Because interaction is in-base, use of database features allows seamless multi-user work, and
can guarantee that the data is in a coherent state. Last we propose tools to facilitate multi-user
edits, both during the edit phase (each user knows what areas are edited by other users), and before
and after edit (planning of edit, analyse of edited areas). 