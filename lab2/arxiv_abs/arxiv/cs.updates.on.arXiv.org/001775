Legacy encryption systems depend on sharing a key (public or private) among the peers involved in
exchanging an encrypted message. However, this approach poses privacy concerns. Especially with
popular cloud services, the control over the privacy of the sensitive data is lost. Even when the
keys are not shared, the encrypted material is shared with a third party that does not necessarily
need to access the content. Moreover, untrusted servers, providers, and cloud operators can keep
identifying elements of users long after users end the relationship with the services. Indeed,
Homomorphic Encryption (HE), a special kind of encryption scheme, can address these concerns as
it allows any third party to operate on the encrypted data without decrypting it in advance. Although
this extremely useful feature of the HE scheme has been known for over 30 years, the first plausible
and achievable Fully Homomorphic Encryption (FHE) scheme, which allows any computable function
to perform on the encrypted data, was introduced by Craig Gentry in 2009. Even though this was a major
achievement, different implementations so far demonstrated that FHE still needs to be improved
significantly to be practical on every platform. First, we present the basics of HE and the details
of the well-known Partially Homomorphic Encryption (PHE) and Somewhat Homomorphic Encryption
(SWHE), which are important pillars of achieving FHE. Then, the main FHE families, which have become
the base for the other follow-up FHE schemes are presented. Furthermore, the implementations and
recent improvements in Gentry-type FHE schemes are also surveyed. Finally, further research directions
are discussed. This survey is intended to give a clear knowledge and foundation to researchers and
practitioners interested in knowing, applying, as well as extending the state of the art HE, PHE,
SWHE, and FHE systems. 