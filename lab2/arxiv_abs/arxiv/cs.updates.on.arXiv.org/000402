SPARQL is the standard query language for RDF graphs. In its strict instantiation, it only offers
querying according to the RDF semantics and would thus ignore the semantics of data expressed with
respect to (RDF) schemas or (OWL) ontologies. Several extensions to SPARQL have been proposed to
query RDF data modulo RDFS, i.e., interpreting the query with RDFS semantics and/or considering
external ontologies. We introduce a general framework which allows for expressing query answering
modulo a particular semantics in an homogeneous way. In this paper, we discuss extensions of SPARQL
that use regular expressions to navigate RDF graphs and may be used to answer queries considering
RDFS semantics. We also consider their embedding as extensions of SPARQL. These SPARQL extensions
are interpreted within the proposed framework and their drawbacks are presented. In particular,
we show that the PSPARQL query language, a strict extension of SPARQL offering transitive closure,
allows for answering SPARQL queries modulo RDFS graphs with the same complexity as SPARQL through
a simple transformation of the queries. We also consider languages which, in addition to paths,
provide constraints. In particular, we present and compare nSPARQL and our proposal CPSPARQL.
We show that CPSPARQL is expressive enough to answer full SPARQL queries modulo RDFS. Finally, we
compare the expressiveness and complexity of both nSPARQL and the corresponding fragment of CPSPARQL,
that we call cpSPARQL. We show that both languages have the same complexity through cpSPARQL, being
a proper extension of SPARQL graph patterns, is more expressive than nSPARQL. 