Modern high performance computing (HPC) systems exhibit a rapid growth in size, both "horizontally"
in the number of nodes, as well as "vertically" in the number of cores per node. As such, they offer
additional levels of hardware parallelism. Each such level requires and employs algorithms for
appropriately scheduling the computational work at the respective level. The present work explores
the relation between two scheduling levels: batch and application. Understanding this relation
is important for improving the performance of scientific applications, that are scheduled and
executed in batches on HPC systems. The relation between batch and application level scheduling
is understudied in the literature. Understanding the relation and interaction between these two
scheduling levels requires their simultaneous analysis during operation. In this work, such an
analysis is performed via simultaneous simulation of batch and application level scheduling for
a number of scenarios. A generic simulation approach is presented that bridges two existing simulators
from the two scheduling levels. A novel two-level simulator that implements the proposed approach
is introduced. The two-level simulator is used to simulate all combinations of three batch scheduling
and four application scheduling algorithms from the literature. These combinations are considered
for allocating resources and executing the parallel jobs of two batches from two production HPC
systems. The results of the scheduling experiments reveal the strong relation between the two scheduling
levels and their mutual influence. Complementing the simulations, the two-level simulator produces
standard parallel execution traces, which can visually be examined and which illustrate the execution
of different jobs and, for each job, the execution of its tasks at node and core levels, respectively.
