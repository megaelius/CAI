We present subquadratic algorithms, in the algebraic decision-tree model of computation, for
detecting whether there exists a triple of points, belonging to three respective sets $A$, $B$,
and $C$ of points in the plane, that satisfy a certain polynomial equation or two equations. The best
known instance of such a problem is testing for the existence of a collinear triple of points in $A\times
B\times C$, a classical 3SUM-hard problem that has so far defied any attempt to obtain a subquadratic
solution, whether in the (uniform) real RAM model, or in the algebraic decision-tree model. While
we are still unable to solve this problem, in full generality, in subquadratic time, we obtain such
a solution, in the algebraic decision-tree model, that uses only roughly $O(n^{28/15})$ constant-degree
polynomial sign tests, for the special case where two of the sets lie on one-dimensional curves and
the third is placed arbitrarily in the plane. As a second application of our technique, we again have
three $n$-point sets $A$, $B$, and $C$ in the plane, and we want to determine whether there exists
a triple $(a,b,c) \in A\times B\times C$ that simultaneously satisfies two real polynomial equations.
For example, this is the setup when testing for the existence of pairs of similar triangles spanned
by the input points, in various contexts discussed later in the paper. We show that problems of this
kind can be solved with roughly $O(n^{24/13})$ constant-degree polynomial sign tests. This is
a considerable improvement, given the 3SUM-hardness of the triangle similarity problem that we
discuss and the lack of any subquadratic algorithm for it (or for any similar problem) in the uniform
model. 