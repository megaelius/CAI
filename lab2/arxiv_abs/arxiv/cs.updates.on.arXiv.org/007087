Scalability of the control plane in a software-defined network (SDN) is enabled by means of decentralization
of the decision-making logic, i.e., by replication of controller functions to physically or virtually
dislocated controller replicas. Replication of a centralized controller state also enables the
protection against controller failures by means of primary and backup replicas responsible for
managing the underlying SDN data plane devices. In this paper, we investigate the effect of the deployed
consistency model on scalability and correctness metrics of the SDN control plane. In particular,
we compare the strong and eventual consistency, and make a case for a novel adaptive consistency
approach. The existing controller platforms rely on either strong or eventual consistency mechanisms
in their state distribution. We show how an adaptive consistency model offers the scalability benefits
in terms of the total request-handling throughput and response time, in contrast to the strong consistency
model. We also outline how the adaptive consistency approach can provide for correctness semantics
that are unachievable with the eventual consistency paradigm in practice. The adaptability of
our approach provides a balanced and tunable tradeoff of scalability and correctness for the SDN
application implemented on top of the adaptive framework. To validate our assumptions, we evaluate
and compare the different approaches in an emulated testbed with an example of a load balancer controller
application. The experimental setup comprises up to five extended OpenDaylight controller instances
and two network topologies from the area of service provider and data center networks. 