OT (Operational Transformation) was invented for supporting real-time co-editors in the late
1980s and has evolved to become a core technique used in today's working co-editors and adopted in
major industrial products. CRDT (Commutative Replicated Data Type) for co-editors was first proposed
around 2006, under the name of WOOT (WithOut Operational Transformation). Follow-up CRDT variations
are commonly labeled as "post-OT" techniques capable of making concurrent operations natively
commutative, and have made broad claims of superiority over OT solutions, in terms of correctness,
time and space complexity, simplicity, etc. Over one decade later, however, CRDT solutions are
rarely found in working co-editors, while OT solutions remain the choice for building the vast majority
of co-editors. Contradictions between this reality and CRDT's purported advantages have been
the source of much debate and confusion in co-editing research and developer communities. What
is CRDT really to co-editing? What are the real differences between OT and CRDT for co-editors? What
are the key factors that may have affected the adoption of and choice between OT and CRDT for co-editors
in the real world? In this paper, we report our discoveries, in relation to these questions and beyond,
from a comprehensive review and comparison study on representative OT and CRDT solutions and working
co-editors based on them. Moreover, this work reveals facts and presents evidences that refute
CRDT claimed advantages over OT. We hope the results reported in this paper will help clear up common
myths, misconceptions, and confusions surrounding alternative co-editing techniques, and accelerate
progress in co-editing technology for real world applications. 