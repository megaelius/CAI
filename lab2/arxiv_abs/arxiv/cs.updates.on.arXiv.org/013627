Given $x,y\in\{0,1\}^n$, Set Disjointness consists in deciding whether $x_i=y_i=1$ for some
index $i \in [n]$. We study the problem of computing this function in a distributed computing scenario
in which the inputs $x$ and $y$ are given to the processors at the two extremities of a path of length
$d$. Set Disjointness on a Line was introduced by Le Gall and Magniez (PODC 2018) for proving lower
bounds on the quantum distributed complexity of computing the diameter of an arbitrary network
in the CONGEST model. In this work, we prove an unconditional lower bound of $\widetilde{\Omega}(\sqrt[3]{n
d^2}+\sqrt{n} )$ rounds for Set Disjointness on a Line. This is the first non-trivial lower bound
when there is no restriction on the memory used by the processors. The result gives us a new lower bound
of $\widetilde{\Omega} (\sqrt[3]{n\delta^2}+\sqrt{n} )$ on the number of rounds required for
computing the diameter $\delta$ of any $n$-node network with quantum messages of size $O(\log n)$
in the CONGEST model. We draw a connection between the distributed computing scenario above and
a new model of query complexity. In this model, an algorithm computing a bi-variate function $f$
has access to the inputs $x$ and $y$ through two separate oracles $O_x$ and $O_y$, respectively.
The restriction is that the algorithm is required to alternately make $d$ queries to $O_x$ and $d$
queries to $O_y$. The technique we use for deriving the round lower bound for Set Disjointness on
a Line also applies to the number of rounds in this query model. We provide an algorithm for Set Disjointness
in this query model with round complexity that matches the round lower bound stated above, up to a
polylogarithmic factor. In this sense, the round lower bound we show for Set Disjointness on a Line
is optimal. 