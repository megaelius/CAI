Over the past five years, the reward associated with mining Proof-of-Work blockchains has increased
substantially. As a result, miners are heavily incentivized to design and utilize Application
Specific Integrated Circuits (ASICs) that can compute hashes far more efficiently than existing
general purpose hardware. Currently, it is difficult for most users to purchase and operate ASICs
due to pricing and availability constraints, resulting in a relatively small number of miners with
respect to total user base for most popular cryptocurrencies. In this work, we aim to invert the problem
of ASIC development by constructing a Proof-of-Work function for which an existing general purpose
processor (GPP, such as an x86 IC) is already an optimized ASIC. In doing so, we will ensure that any
would-be miner either already owns an ASIC for the Proof-of-Work system they wish to participate
in or can attain one at a competitive price with relative ease. In order to achieve this, we present
HashCore, a Proof-of-Work function composed of "widgets" selected pseudo-randomly at runtime
that each execute a sequence of general purpose processor instructions designed to stress the computational
resources of such a GPP. The widgets will be modeled after workloads that GPPs have been optimized
for, for example, the SPEC CPU 2017 benchmark suite for x86 ICs, in a technique we refer to as inverted
benchmarking. We observe that GPP designers/developers essentially create an ASIC for benchmarks
such as SPEC CPU 2017. By modeling HashCore after such benchmarks, we create a Proof-of-Work function
that can be run most efficiently on a GPP, resulting in a more accessible and competitive mining market.
