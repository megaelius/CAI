Traditionally, software APIs (application programming interfaces) have been viewed from a technical
perspective, as a means to separate implementation from functional calls, and as a way to define
a contract of software functionality. The technical benefits of APIs have been reported in numerous
studies. Several reports from industry offer useful practical design considerations for APIs,
including advice on collecting usage data, monetization strategies, and at what point to open an
API to external parties. Although this advice can be useful, the focus is still often on the API, only
without considering the role the API plays in the wider organization or how it fits into an organizational
strategy. Our industrial experiences show that more information is needed about the challenges
and best practices of API design and management in an organizational context. Furthermore, it has
become apparent that APIs are able to play a key role as part of a strategic business plan for software-intensive
companies. In this report, we present the results of our work with companies to build a framework
that synthesizes and summarizes API strategies from several perspectives, including: strategic
API lifecycle, lifecycle stage characteristics, lifecycle use cases and transition points, API
layered architecture, BAPO, value modeling, ecosystem mapping with goal models, API metrics,
goal models with metrics, and API governance guidance. Our research was carried out with an industry-academic
collaboration. The framework was developed iteratively through workshops and discussions with
company partners. We show how conceptual frameworks can be used to drive API strategy development,
drawing on our research with several companies in practice. 