In Positional-Slotted Object-Applicative (PSOA) RuleML, a predicate application (atom) can
have an Object IDentifier (OID) and descriptors that may be positional arguments (tuples) or attribute-value
pairs (slots). PSOA RuleML 1.0 specifies for each descriptor whether it is to be interpreted under
the perspective of the predicate in whose scope it occurs. This perspectivity dimension refines
the space between oidless, positional atoms (relationships) and oidful, slotted atoms (frames):
While relationships use only a predicate-scope-sensitive (predicate-dependent) tuple and frames
use only predicate-scope-insensitive (predicate-independent) slots, PSOA RuleML 1.0 uses a
systematics of orthogonal constructs also permitting atoms with (predicate-)independent tuples
and atoms with (predicate-)dependent slots. This supports data and knowledge representation
where a slot attribute can have different values depending on the predicate. PSOA thus extends object-oriented
multi-membership and multiple inheritance. Based on objectification, PSOA laws are given: Besides
unscoping and centralization, the semantic restriction and transformation of describution permits
rescoping of one atom's independent descriptors to another atom with the same OID but a different
predicate. For inheritance, default descriptors are realized by rules. On top of a metamodel and
a Grailog visualization, PSOA's atom systematics for facts, queries, and rules is explained. The
presentation and (XML-)serialization syntaxes of PSOA RuleML 1.0 are introduced. Its model-theoretic
semantics is formalized by extending the interpretation functions for dependent descriptors.
The open PSOATransRun system since Version 1.3 realizes PSOA RuleML 1.0 by a translator to runtime
predicates, including for dependent tuples (prdtupterm) and slots (prdsloterm). Our tests show
efficiency advantages of dependent and tupled modeling. 