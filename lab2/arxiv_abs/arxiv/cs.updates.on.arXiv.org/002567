Approximate computing is emerging as an alternative to accurate computing due to its potential
for realizing digital circuits and systems with low power dissipation, less critical path delay,
and less area occupancy for an acceptable trade-off in the accuracy of results. In the domain of computer
arithmetic, several approximate adders and multipliers have been designed and their potential
have been showcased versus accurate adders and multipliers for practical digital signal processing
applications. Nevertheless, in the existing literature, almost all the approximate adders and
multipliers reported correspond to the synchronous design method. In this work, we consider robust
asynchronous i.e. quasi-delay-insensitive realizations of approximate adders by employing
delay-insensitive codes for data representation and processing, and the 4-phase handshake protocols
for data communication. The 4-phase handshake protocols used are the return-to-zero and the return-to-one
protocols. Specifically, we consider the implementations of 32-bit approximate adders based
on the return-to-zero and return-to-one handshake protocols by adopting the delay-insensitive
dual-rail code for data encoding. We consider a range of approximations varying from 4-bits to 20-bits
for the least significant positions of the accurate 32-bit asynchronous adder. The asynchronous
adders correspond to early output (i.e. early reset) type, which are based on the well-known ripple
carry adder architecture. The experimental results show that approximate asynchronous adders
achieve reductions in the design metrics such as latency, cycle time, average power dissipation,
and silicon area compared to the accurate asynchronous adders. Further, the reductions in the design
metrics are greater for the return-to-one protocol compared to the return-to-zero protocol. The
design metrics were estimated using a 32/28nm CMOS technology. 