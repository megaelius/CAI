The increased network flexibility introduced by new technologies, such as Software-Defined Networking,
are motivating operators to consider running their networks at higher utilization levels. Traditionally,
networks were operated at a small fraction of the network capacity (30-40%); recently, however,
operators are considering running the network harder (60% utilization and above [1]). Higher utilization
can increase the network operator's revenue, but this gain comes at a cost: daily traffic fluctuations
and failures might result in the network not being able to carry all offered traffic. We call such
network congestion situations Resource Crunch. Dealing with Resource Crunch requires certain
types of flexibility in the system. We focus on the scenario of demands with flexible bandwidth requirements,
e.g., allocated connections might undergo service degradations to allow for a new connection to
be provisioned - a demand that would otherwise be blocked. In these situations, it is important that
the network operator makes an informed decision, since degrading a high-paying connection to allocate
a low-value demand is not sensible. Accordingly, we show that, during Resource Crunch, the decision
of whether or not to serve a demand (and which other connections to degrade) focusing on maximizing
profits is of complex nature. In this study, we propose an abstraction of the network state, called
Connection Adjacency Graph (CAG), to devise an efficient method to decide whether or not to serve
a demand, and which other connections to degrade. We compare our method to existing greedy approaches
and show that we outperform them during Resource Crunch. 