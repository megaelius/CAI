Software systems typically consist of various interacting components and units. While these components
can be tested and shown to work correctly in isolation, when integrated and start interacting with
each other, they may fail to produce the desired behaviors and results. Integration testing plays
an important role in revealing issues in interactions among cooperating components. Identifying
different interaction scenarios, however, is not a trivial task when performing integration testing.
On the other hand, most of the integration testing solutions proposed in the literature are manual
which hinders their scalability and applicability when it comes to large industrial systems. In
this paper we introduce IntegrationDistiller as an automated solution and tool to identify integration
scenarios and generate test cases (in the form of method call sequences) for .NET applications.
It works by analyzing the code and automatically identifying class couplings, interacting methods,
as well as invocation points. Moreover, the tool also helps and supports testers in identifying
timing issues at integration level by automatic code instrumentation at invocation points. The
code analysis engine of IntegrationDistiller is built and automated using .NET compiler platform,
known as Roslyn. Hence, this work is the first in utilizing Roslyn features for automatic integration
analysis and integration test case generation. This work has been done as part of our collaboration
with ABB Industrial Automation Control Technologies (IACT) in V\"aster{\aa}s-Sweden to address
the integration testing challenges of the software part of the ABB Ability 800xA distributed control
systems. 