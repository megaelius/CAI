The property graph is an increasingly popular data model. An important task when dealing with property
graphs is pattern matching. Given a property graph schema S, a property graph G and a query pattern
P, all expressed in language L, pattern matching is the process of finding, merging and annotating
subgraphs of G that match P. Expressive pattern languages support topological constraints and
property values constraints, as well as negation, quantification, grouping, aggregation, and
path semantics. Calculated properties may be defined for vertices, edges, and subgraphs, and constraints
may be imposed on their evaluation result. Query-posers would like to pose complex queries in a manner
that is coherent with the way they think. They want to do it with minimal technical training, minimal
effort, and minimal trial and error. The ability to express patterns in a way that is aligned with
their mental processes is crucial to the flow of their work, and to the quality of the insights they
can draw. Since the capabilities of the human visual system with respect to pattern perception are
remarkable, it is a matter of course that query patterns were to be expressed visually. Visual query
languages have the potential to be much more 'user-friendly' than their textual counterparts in
the sense that patterns may be constructed and understood much more quickly and with much less mental
effort. A long-standing challenge is to design a visual query language that is generic, has rich
expressive power, and is highly receptive and productive. V1 is a declarative visual pattern query
language for schema-based property graphs. V1 supports property graphs with mixed (both directed
and undirected) edges and half-edges, with multivalued and composite properties, and with null
property values. V1 is generic, concise, has rich expressive power, and is highly receptive and
productive. 