We consider the problem of filling an unknown area represented by an arbitrary connected graph of
$n$ vertices by mobile luminous robots. In this problem, the robots enter the graph one-by-one through
a specific vertex, called the Door, and they eventually have to cover all vertices of the graph while
avoiding collisions. The robots are anonymous and make decisions driven by the same local rule of
behavior. They have limited persistent memory and limited visibility range. We investigate the
Filling problem in the asynchronous model. We assume that the robots know an upper bound $\Delta$
on the maximum degree of the graph before entering. We present an algorithm solving the asynchronous
Filling problem with robots having $1$ hop visibility range, $O(\log\Delta)$ bits of persistent
storage, and $\Delta+4$ colors, including the color when the light is off. We analyze the algorithm
in terms of asynchronous rounds, where a round means the smallest time interval in which each robot,
which has not yet finished the algorithm, has been activated at least once. We show that this algorithm
needs $O(n^2)$ asynchronous rounds. Our analysis provides the first asymptotic upper bound on
the running time in terms of asynchronous rounds. Then we show how the number of colors can be reduced
to $O(1)$ at the cost of the running time. The algorithm with $1$ hop visibility range, $O(\log \Delta)$
bits of persistent memory, and $O(1)$ colors needs $O(n^2\log \Delta)$ rounds. We show how the running
time can be improved by robots with a visibility range of $2$ hops, $O(\log \Delta)$ bits of persistent
memory, and $\Delta + 4$ colors (including the color when the light is off). We show that the algorithm
needs $O(n)$ asynchronous rounds. Finally, we show how to extend our solution to the $k$-Door case,
$k\geq 2$, by using $\Delta + k + 4$ colors, including the color when the light is off. 