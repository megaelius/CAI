The section-carry based carry lookahead adder (SCBCLA) architecture was proposed as an efficient
alternative to the conventional carry lookahead adder (CCLA) architecture for the physical implementation
of computer arithmetic. In previous related works, self-timed SCBCLA architectures and synchronous
SCBCLA architectures were realized using standard cells and FPGAs. In this work, we deal with improved
realizations of synchronous SCBCLA architectures designed in a semi-custom fashion using standard
cells. The improvement is quantified in terms of a figure of merit (FOM), where the FOM is defined
as the inverse product of power, delay and area. Since power, delay and area of digital designs are
desirable to be minimized, the FOM is desirable to be maximized. Starting from an efficient conventional
carry lookahead generator, we show how an optimized section-carry based carry lookahead generator
is realized. In comparison with our recent work dealing with standard cells based implementation
of SCBCLAs to perform 32-bit addition of two binary operands, we show in this work that with improved
section-carry based carry lookahead generators, the resulting SCBCLAs exhibit significant improvements
in FOM. Compared to the earlier optimized hybrid SCBCLA, the proposed optimized hybrid SCBCLA improves
the FOM by 88.3%. Even the optimized hybrid CCLA features improvement in FOM by 77.3% over the earlier
optimized hybrid CCLA. However, the proposed optimized hybrid SCBCLA is still the winner and has
a better FOM than the currently optimized hybrid CCLA by 15.3%. All the CCLAs and SCBCLAs are implemented
to realize 32-bit dual-operand binary addition using a 32/28nm CMOS process. 