As the automotive industry focuses its attention more and more towards the software functionality
of vehicles, techniques to deliver new software value at a fast pace are needed. Continuous Experimentation,
a practice coming from the web-based systems world, is one of such techniques. It enables researchers
and developers to use real-world data to verify their hypothesis and steer the software evolution
based on performances and user preferences, reducing the reliance on simulations and guesswork.
Several challenges prevent the verbatim adoption of this practice on automotive cyber-physical
systems, e.g., safety concerns and limitations from computational resources; nonetheless, the
automotive field is starting to take interest in this technique. This work aims at demonstrating
and evaluating a prototypical Continuous Experimentation infrastructure, implemented on a distributed
computational system housed in a commercial truck tractor that is used in daily operations by a logistic
company on public roads. The system comprises computing units and sensors, and software deployment
and data retrieval are only possible remotely via a mobile data connection due to the commercial
interests of the logistics company. This study shows that the proposed experimentation process
resulted in the development team being able to base software development choices on the real-world
data collected during the experimental procedure. Additionally, a set of previously identified
design criteria to enable Continuous Experimentation on automotive systems was discussed and
their validity confirmed in the light of the presented work. 