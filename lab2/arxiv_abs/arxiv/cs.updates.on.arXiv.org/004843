In this work we define a class of ordered adversaries causing distractions according to some partial
order fixed by the adversary before the execution, and study how they affect performance of algorithms.
We focus on the Do-All problem of performing t tasks on a shared channel consisting of p crash-prone
stations. The channel restricts communication: no message is delivered to the alive stations if
more than one station transmits at the same time. The performance measure for the Do-All problem
is work: the total number of available processor steps during the whole execution. We address the
question of how the ordered adversaries controlling crashes of stations influence work performance
of Do-All algorithms. The first presented algorithm solves Do-All with work O(t+p\sqrt{t}\log
p) against the Linearly-Ordered adversary, restricted by some pre-defined linear order of crashing
stations. Another algorithm runs against the Weakly-Adaptive adversary, restricted by some pre-defined
set of f crash-prone stations (it can be seen as restricted by the order being an anti-chain of crashing
stations). The work done by this algorithm is O(t+p\sqrt{t}+p\min{p/(p-f),t}\log p). Both results
are close to the corresponding lower bounds from [CKL]. We generalize this result to the class of
adversaries restricted by a partial order with a maximum anti-chain of size k and complement with
the lower bound. We also consider a class of delayed adaptive adversaries, who could see random choices
with some delay. We give an algorithm that runs against the 1-RD adversary (seeing random choices
of stations with one round delay), achieving close to optimal O(t+p\sqrt{t}\log^2 p) work complexity.
This shows that restricting adversary by even 1 round delay results in (almost) optimal work on a
shared channel. 