We give algorithms for geometric graph problems in the modern parallel models inspired by MapReduce.
For example, for the Minimum Spanning Tree (MST) problem over a set of points in the two-dimensional
space, our algorithm computes a $(1+\epsilon)$-approximate MST. Our algorithms work in a constant
number of rounds of communication, while using total space and communication proportional to the
size of the data (linear space and near linear time algorithms). In contrast, for general graphs,
achieving the same result for MST (or even connectivity) remains a challenging open problem, despite
drawing significant attention in recent years. We develop a general algorithmic framework that,
besides MST, also applies to Earth-Mover Distance (EMD) and the transportation cost problem. Our
algorithmic framework has implications beyond the MapReduce model. For example it yields a new
algorithm for computing EMD cost in the plane in near-linear time, $n^{1+o_\epsilon(1)}$. We note
that while recently Sharathkumar and Agarwal developed a near-linear time algorithm for $(1+\epsilon)$-approximating
EMD, our algorithm is fundamentally different, and, for example, also solves the transportation
(cost) problem, raised as an open question in their work. Furthermore, our algorithm immediately
gives a $1+\epsilon$ approximation algorithm with $n^{\delta}$ space in the streaming-with-sorting
model with $1/\delta^{O(1)}$ passes. As such, it is tempting to conjecture that the parallel models
may also constitute a concrete playground in the quest for efficient algorithms for EMD (and other
similar problems) in the vanilla streaming model, a well-known open problem. 