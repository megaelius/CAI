We introduce a set of techniques that allow for efficiently generating many independent random
walks in the Massive Parallel Computation (MPC) model with space per machine strongly sublinear
in the number of vertices. In this space-per-machine regime, many natural approaches to graph problems
struggle to overcome the $\Theta(\log n)$ MPC round complexity barrier. We design a PageRank algorithm
that breaks this barrier even for directed graphs, and also show how to break this barrier for approximate
bipartiteness and expansion testing. In the undirected case, we start our random walks from the
stationary distribution, which implies that we approximately know the empirical distribution
of their next steps. This allows for preparing continuations of random walks in advance and applying
a doubling approach. As a result we can generate multiple random walks of length $l$ in $\Theta(\log
l)$ rounds on MPC. Moreover, we show that under the 2-Cycle conjecture this round complexity is asymptotically
tight. One of the most important applications of random walks is for computing PageRank. We show
how to use our approach to approximate PageRank for a constant damping factor: * in $O(\log \log n)$
rounds on undirected graphs (with $\tilde{O}(m)$ total space), * in $\tilde{O}(\log \log^2 n)$
rounds on directed graphs (with $\tilde{O}(m+n^{1+o(1)})$ total space). For directed graphs,
we define a mixture of directed and undirected versions of the graph. This allows us to start our sampling
from the undirected case and then to move step by step towards the directed case. In each step, we sample
slightly more walks to be able to estimate the stationary distribution for the next step. Building
on our random-walk primitive and traditional property testing techniques, we also show how to approximately
test bipartiteness and expansion in $O(\log\log(n))$ MPC rounds. 