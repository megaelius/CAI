A graph environment must be explored by a collection of mobile robots. Some of the robots, a priori
unknown, may turn out to be unreliable. The graph is weighted and each node is assigned a deadline.
The exploration is successful if each node of the graph is visited before its deadline by a reliable
robot. The edge weight corresponds to the time needed by a robot to traverse the edge. Given the number
of robots which may crash, is it possible to design an algorithm, which will always guarantee the
exploration, independently of the choice of the subset of unreliable robots by the adversary? We
find the optimal time, during which the graph may be explored. Our approach permits to find the maximal
number of robots, which may turn out to be unreliable, and the graph is still guaranteed to be explored.
We concentrate on line graphs and rings, for which we give positive results. We start with the case
of the collections involving only reliable robots. We give algorithms finding optimal times needed
for exploration when the robots are assigned to fixed initial positions as well as when such starting
positions may be determined by the algorithm. We extend our consideration to the case when some number
of robots may be unreliable. Our most surprising result is that solving the line exploration problem
with robots at given positions, which may involve crash-faulty ones, is NP-hard. The same problem
has polynomial solutions for a ring and for the case when the initial robots' positions on the line
are arbitrary. The exploration problem is shown to be NP-hard for star graphs, even when the team
consists of only two reliable robots. 