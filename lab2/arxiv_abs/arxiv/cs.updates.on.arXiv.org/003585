We design new algorithms for maximizing a monotone non-negative submodular function under various
constraints, which improve the state-of-the-art in time complexity and/or performance guarantee.
We first investigate the cardinality constrained submodular maximization problem that has been
widely studied for about four decades. We design an $(1-\frac{1}{e}-\varepsilon)$-approximation
algorithm that makes $O(n\cdot \max \{\varepsilon^{-1},\log\log k \})$ queries. To the best of
our knowledge, this is the fastest known algorithm. We further answer the open problem on finding
a lower bound on the number of queries. We show that, no (randomized) algorithm can achieve a ratio
better than $(\frac{1}{2}+\Theta(1))$ with $o(\frac{n}{\log n})$ queries. The acceleration
above is achieved by our \emph{Adaptive Decreasing Threshold} (ADT) algorithm. Based on ADT, we
study the $p$-system and $d$ knapsack constrained maximization problem. We show that an $(1/(p+\frac{7}{4}d+1)-\varepsilon)$-approximate
solution can be computed via $O(\frac{n}{\varepsilon}\log \frac{n}{\varepsilon}\max\{\log
\frac{1}{\varepsilon},\log\log n\})$ queries. Note that it improves the state of the art in both
time complexity and approximation ratio. We also show how to improve the ratio for a single knapsack
constraint via $O(n\cdot \max \{\varepsilon^{-1},\log\log k \})$ queries. For maximizing a submodular
function with curvature $\kappa$ under matroid constraint, we show an $(1-\frac{\kappa}{e}-\varepsilon)$-approximate
algorithm that uses $\tilde{O}(nk)$ value oracle queries. Our ADT could be utilized to obtain faster
algorithms in other problems. To prove our results, we introduce a general characterization between
randomized complexity and deterministic complexity of approximation algorithms that could be
used in other problems and may be interesting in its own right. 