The Sum of Squares (\sos{}) hierarchy gives an automatized technique to create a family of increasingly
tight convex relaxations for binary programs. There are several problems for which a constant number
of rounds of this hierarchy give integrality gaps matching the best known approximation algorithms.
For many other problems, however, ad-hoc techniques give better approximation ratios than \sos{}
in the worst case, as shown by corresponding lower bound instances. Notably, in many cases these
instances are invariant under the action of a large permutation group. This yields the question
how symmetries in a formulation degrade the performance of the relaxation obtained by the \sos{}
hierarchy. In this paper, we study this for the case of the minimum makespan problem on identical
machines. Our first result is to show that $\Omega(n)$ rounds of \sos{} applied over the \emph{configuration
linear program} yields an integrality gap of at least $1.0009$, where $n$ is the number of jobs. Our
result is based on tools from representation theory of symmetric groups. Then, we consider the weaker
\emph{assignment linear program} and add a well chosen set of symmetry breaking inequalities that
removes a subset of the machine permutation symmetries. We show that applying $2^{\tilde{O}(1/\varepsilon^2)}$
rounds of the SA hierarchy to this stronger linear program reduces the integrality gap to $1+\varepsilon$,
which yields a linear programming based polynomial time approximation scheme. Our results suggest
that for this classical problem, symmetries were the main barrier preventing the \sos{}/ SA hierarchies
to give relaxations of polynomial complexity with an integrality gap of~$1+\varepsilon$. We leave
as an open question whether this phenomenon occurs for other symmetric problems. 