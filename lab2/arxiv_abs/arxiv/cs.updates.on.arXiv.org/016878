While recent progress in quantum hardware open the door for significant speedup in certain key areas,
quantum algorithms are still hard to implement right, and the validation of such quantum programs
is a challenge. Early attempts either suffer from the lack of automation or parametrized reasoning,
or target high-level abstract algorithm description languages far from the current de facto consensus
of circuit-building quantum programming languages. As a consequence, no significant quantum
algorithm implementation has been currently verified in a scale-invariant manner. We propose
Qbricks, the first formal verification environment for circuit-building quantum programs, featuring
clear separation between code and proof, parametric specifications and proofs, high degree of
proof automation and allowing to encode quantum programs in a natural way, i.e. close to textbook
style. Qbricks builds on best practice of formal verification for the classical case and tailor
them to the quantum case: we bring a new domain-specific circuit-building language for quantum
programs, namely Qbricks-DSL, together with a new logical specification language Qbricks-Spec
and a dedicated Hoare-style deductive verification rule named Hybrid Quantum Hoare Logic. Especially,
we introduce and intensively build upon HOPS, a higher-order extension of the recent path-sum symbolic
representation, used for both specification and automation. To illustrate the opportunity of
Qbricks, we implement the first verified parametric implementations of several famous and non-trivial
quantum algorithms, including the quantum part of Shor integer factoring (Order Finding - Shor-OF),
quantum phase estimation (QPE) - a basic building block of many quantum algorithms, and Grover search.
These breakthroughs were amply facilitated by the specification and automated deduction principles
introduced within Qbricks. 