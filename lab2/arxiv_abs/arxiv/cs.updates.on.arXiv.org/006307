We understand the term serendipity to describe a creative process that develops, in context, with
the active participation of a creative agent, but not entirely within that agent's control. While
a system cannot be made to perform serendipitously on demand, nevertheless, we argue that its \emph{serendipity
potential} can be increased by means of a suitable system architecture and other design choices.
We distil a unified description of serendipitous occurrences from historical theorisations of
serendipity and creativity. This takes the form of a framework with six phases: \emph{perception},
\emph{attention}, \emph{interest}, \emph{explanation}, \emph{bridge}, and \emph{valuation}.
We then use this framework to organise a survey of literature in cognitive science, philosophy,
and computing, which yields practical definitions of the six phases, along with heuristics for
implementation. We use the resulting model to evaluate the serendipity potential of four existing
systems developed by others, and two systems previously developed by two of us. Whereas most existing
research that considers serendipity in a computing context deals with serendipity as a service,
we relate theories of serendipity to artificial intelligence practice and the development of autonomous
systems. We outline representative directions for future applications of our model in the domains
of automated programming, recommender systems, and computational creativity. We conclude that
it is feasible to equip computational systems with the potential for serendipity, and that this
could be beneficial in varied artificial intelligence applications, particularly those designed
to operate responsively in real-world contexts. 