With the popularity of mobile devices, such as smartphones, tablets, users prefer visiting Web
pages on mobile devices. Meanwhile, HTTP(S) plays as the major protocol to deliver Web contents,
and has served the Web well for more than 15 years. However, as the Web pages grow increasingly complex
to provide more content and functionality, the shortcomings and inflexibility of HTTP become more
and more urgent to solve, e.g., the sluggish page load, insecure content, redundant transfer, etc.
SPDY and HTTP/2 are promoted to solve the shortcomings and inflexibilities of HTTP/1.x. We are interested
in how Web pages perform on smartphones with different protocols, including HTTP, HTTPS, SPDY,
and HTTP/2. In this paper, we divide our experiments into two parts. First, in order to simplify our
analysis, we develop our own HTTP client ignoring complicated process in real browsers to fetch
synthetic Web pages with pre-specified object sizes and object numbers with different protocols,
respectively. Meanwhile, we emulate different network conditions between client and server using
Traffic Control. In order to test with real browsers, we clone Alexa top 200 websites, which have
the corresponding mobile version, into our local host. Meanwhile, we control mobile Chrome browser
to load those Web pages with different protocols and emulate different network conditions using
Traffic Control. We identify how Web page characteristics and network conditions affect Web performance
on smartphones for each protocol. We also conduct experiments on a low-end device to observe if a
less powerful processor could affect Web page performance for each protocol. 