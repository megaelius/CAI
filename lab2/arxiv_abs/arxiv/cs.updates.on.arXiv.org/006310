Context: Software testability is the degree to which a software system or a unit under test supports
its own testing. To predict and improve software testability, a large number of techniques and metrics
have been proposed by both practitioners and researchers in the last several decades. Reviewing
and getting an overview of the entire state-of-the-art and state-of-the-practice in this area
is often challenging for a practitioner or a new researcher. Objective: Our objective is to summarize
the body of knowledge in this area and to benefit the readers (both practitioners and researchers)
in preparing, measuring and improving software testability. Method: To address the above need,
the authors conducted a survey in the form of a systematic literature mapping (classification)
to find out what we as a community know about this topic. After compiling an initial pool of 303 papers,
and applying a set of inclusion/exclusion criteria, our final pool included 208 papers. Results:
The area of software testability has been comprehensively studied by researchers and practitioners.
Approaches for measurement of testability and improvement of testability are the most-frequently
addressed in the papers. The two most often mentioned factors affecting testability are observability
and controllability. Common ways to improve testability are testability transformation, improving
observability, adding assertions, and improving controllability. Conclusion: This paper serves
for both researchers and practitioners as an "index" to the vast body of knowledge in the area of testability.
The results could help practitioners measure and improve software testability in their projects.
