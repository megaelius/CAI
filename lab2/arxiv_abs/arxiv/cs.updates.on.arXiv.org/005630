We consider the flow network model to solve the multiprocessor real-time task scheduling problems.
Using the flow network model or its generic form, linear programming (LP) formulation, for the problems
is not new. However, the previous works have limitations, for example, that they are classified
as offline scheduling techniques since they establish a flow network model or an LP problem considering
a very long time interval. In this study, we propose how to construct the flow network model for online
scheduling periodic real-time tasks on multiprocessors. Our key idea is to construct the flow network
only for the active instances of tasks at the current scheduling time, while guaranteeing the existence
of an optimal schedule for the future instances of the tasks. The optimal scheduling is here defined
to ensure that all real-time tasks meet their deadlines when the total utilization demand of the
given tasks does not exceed the total processing capacity. We then propose the flow network model-based
polynomial-time scheduling algorithms. Advantageously, the flow network model allows the task
workload to be collected unfairly within a certain time interval without losing the optimality.
It thus leads us to designing three unfair-but-optimal scheduling algorithms on both continuous
and discrete-time models. Especially, our unfair-but-optimal scheduling algorithm on a discrete-time
model is, to the best of our knowledge, the first in the problem domain. We experimentally demonstrate
that it significantly alleviates the scheduling overheads, i.e., the reduced number of preemptions
with the comparable number of task migrations across processors. 