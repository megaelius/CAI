Software engineering (SE) research should be relevant to industrial practice. There has been a
debate on this issue in the community since 1980's by pioneers such as Robert Glass and Colin Potts.
As we pass the milestone of "50 Years of Software Engineering", some recent positive efforts have
been made in this direction, e.g., establishing "industrial" tracks in several SE conferences.
However, we, as a community, are still struggling with research relevance and utility. The goal
of this paper is to act as another "wake-up call" for the community to reflect and act on the relevance
of SE research. The contributions of this paper are as follows: (1) a review of the debate on research
relevance in other fields; (2) a Multi-vocal Literature Review (MLR) of the debate in SE (46 sources)
and the suggestions discussed in the community for improving the situation; (3) a summary of the
experience of the authors in conducting SE research with varying degrees of relevance; and (4) a
review of recent activities being done in the SE community to improve relevance. There has been no
systematic literature review on the topic of research relevance in SE yet. Some of our MLR findings
are that: the top-3 root causes of low relevance, as discussed in the community are: (1) Simplistic
view (wrong assumptions) about SE in practice; (2) Wrong identification of research problems (needs);
and (3) Issues with research mindset. The top-3 suggestions for improving research relevance are:
(1) Using appropriate research approaches such as action-research, that would increase chances
of research relevance; (2) Choosing relevant (practical) problems; and (3) Collaborating with
industry. By synthesizing all the discussions on this debate so far, this paper hopes to encourage
further discussions and actions in the community to increase our collective efforts to improve
the research relevance in our discipline. 