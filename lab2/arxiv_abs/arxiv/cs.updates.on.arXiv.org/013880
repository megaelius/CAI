Consider a system, including a user, $N$ servers, and $K$ basic functions which are known at all of
the servers. Using the combination of those basic functions, it is possible to construct a wide class
of functions. The user wishes to compute a particular combination of the basic functions, by offloading
the computation to $N$ servers, while the servers should not obtain any information about which
combination of the basic functions is to be computed. The objective is to minimize the total number
of queries asked by the user from the servers to achieve the desired result. As a first step toward
this problem, in this paper, we consider the case where the user is interested in a class of functions
which are composition of the basic functions, while each basic function appears in the composition
exactly once. This means that in this case, to ensure privacy, we only require to hide to the order
of the basic functions in the desired composition of the user. We further assume that the basic functions
are linear and can be represented by (possibly large-scale) matrices. We call this problem as private
sequential function computation. We study the capacity $C$, defined as the supremum of the number
of desired computations, normalized by the number of computations done at the servers, subject
to the privacy constraint. We prove that $(1-\frac{1}{N})/ (1-\frac{1}{\max(K,N)}) \le C \le
1$. For the achievability, we show that the user can retrieve the desired order of composition, by
choosing a proper order of inquiries among different servers, while keeping the order of computations
for each server fixed, irrespective of the desired order of composition. In the end, we develop an
information-theoretic converse which results in an upper bound on the capacity. 