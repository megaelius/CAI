In this work we present a general and versatile algorithmic framework for exhaustively generating
a large variety of different combinatorial objects, based on encoding them as permutations. This
approach provides a unified view on many known results and allows us to prove many new ones. In particular,
we obtain the following four classical Gray codes as special cases: the Steinhaus-Johnson-Trotter
algorithm to generate all permutations of an $n$-element set by adjacent transpositions; the binary
reflected Gray code to generate all $n$-bit strings by flipping a single bit in each step; the Gray
code for generating all $n$-vertex binary trees by rotations due to Lucas, van Baronaigien, and
Ruskey; the Gray code for generating all partitions of an $n$-element ground set by element exchanges
due to Kaye. The first main application of our framework are permutation patterns, yielding new
Gray codes for different pattern-avoiding permutations, such as vexillary, skew-merged, separable,
Baxter and twisted Baxter permutations, 2-stack sortable permutations, geometric grid classes,
and many others. We also obtain new Gray codes for many combinatorial objects that are in bijection
to these permutations, in particular for five different types of geometric rectangulations, also
known as floorplans, which are divisions of a square into $n$ rectangles subject to certain restrictions.
The second main application of our framework are lattice congruences of the weak order on the symmetric
group $S_n$. Recently, Pilaud and Santos realized all those lattice congruences as $(n-1)$-dimensional
polytopes, called quotientopes, which generalize hypercubes, associahedra, permutahedra etc.
Our algorithm generates each of those lattice congruences, by producing a Hamilton path on the skeleton
of the corresponding quotientope, yielding a constructive proof that each of these highly symmetric
graphs is Hamiltonian. 