We show that computing an equilibrium in atomic splittable congestion games with player-specific
affine cost functions $l_{e,i}(x) = a_{e,i} x + b_{e,i}$ is $\mathsf{PPAD}$-complete. To prove
that the problem is contained in $\mathsf{PPAD}$, we develop a homotopy method that traces an equilibrium
for varying flow demands of the players. A key technique for this method is to describe the evolution
of the equilibrium locally by a novel block Laplacian matrix. Using the properties of this matrix
give rise to a path following formulation for computing an equilibrium where states correspond
to supports that are feasible for some demands. A closer investigation of the block Laplacian system
further allows to orient the states giving rise to unique predecessor and successor states thus
putting the problem into $\mathsf{PPAD}$. For the $\mathsf{PPAD}$-hardness, we reduce from computing
an approximate equilibrium of a bimatrix win-lose game. As a byproduct of our reduction we further
show that computing a multi-class Wardrop equilibrium with class dependent affine cost functions
is $\mathsf{PPAD}$-complete as well. On our way, we obtain new results regarding the multiplicity
of equilibria. When the coefficients $a_{e,i}$ are in general position, every game has a finite
set of equilibria while without this assumption there may be a continuum of equilibria. When the
additive constants $b_{e,i}$ are in general position, games have an odd number of equilibria except
for a nullset of demand values. As another byproduct of our $\mathsf{PPAD}$-completeness proof,
we obtain an algorithm that computes a continuum of equilibria parametrized by the players' flow
demand. For player-specific costs, the algorithm runs in polynomial space. For games with player-independent
costs, we obtain an algorithm computing all equilibria as a function of the flow demand that runs
in time polynomial in the output. 