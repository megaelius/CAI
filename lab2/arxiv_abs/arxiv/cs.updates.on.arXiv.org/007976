Our long term goal is to execute General Purpose computation on homogeneous computing media consisting
of millions of small identical Processing Elements (PE) communicating locally. We proceed by simulating
the Self-Development of a Network (SDN) of membranes, and this implies a medium able to implement
artificial physics laws that simulates simplified membrane-agents, dividing and homogenizing.
This is a difficult challenge: our current version of SDN-media uses PEs with 77 bits of state and
13878 gates. This high level of complexity forced us to work out an efficient and expressive scheme
for programming the medium, the goal of this paper it to present it. The PE's communication graph
has to be a maximal planar graph. Fields of bits are spread in 2D, over three locus: the vertices, edges
and faces of this planar graph. They constitute three data types, which abstract away the ensemble
of PEs. The simplicial proximity between bits is used to define operations on fields, thus implementing
"{\it spatial type}". Expression combining operations can be translated in logical circuits.
The efficiency is achieved because fields of different locus are combined using reduction operation.
This allows to factorize computation by exploiting the symmetries always present when simulating
physics. The expressiveness is achieved by allowing a modular procedural programming: Instead
of directly focusing on a specific target update function, we develop a library or reusable functions
mapping fields to other fields. We consider two kinds of maximal planar graph: with isotropic distribution
of PEs or with the hexagonal lattice structure. The first compares to amorphous computing medium
and has a better potential for hardware scalability, the second compares with cellular automata
computing medium, it is more efficient. 