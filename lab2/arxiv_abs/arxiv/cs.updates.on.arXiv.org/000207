So far, following the works of A.M. Turing, the algorithms were considered as the mathematical abstraction
from which we could write programs for computers whose principle was based on the theoretical concept
of Turing machine. We start here from the observation that natural algorithms or rather algorithms
of the nature which are massively parallel, autoadaptative and reproductible, and for which we
do not know how they really work, nor why, are not easily specified by the current theoretical model
of Universal Turing machine, or Universal Computer. In particular the aspects of communications,
evolutionary rules (rulers), random (unpredictable) events, just like the genetic code, are taken
into account only by subtleties which oblige to break the theory. We shall propose one \textit{universal
model} of algorithm called machine-alpha which contains and generalizes the existing models.
--- Jusqu'ici, suite aux travaux de A.M.Turing [Turing, 1936], les algorithmes ont \'et\'e vus
comme l'abstraction \`a partir de laquelle on pouvait \'ecrire des programmes pour des ordinateurs
dont le principe \'etait lui-m\^eme issu du concept th\'eorique de machine de Turing. Nous partons
ici du constat que les algorithmes naturels ou plut\^ot les algorithmes de la nature, massivement
parall\`eles, autoadaptatifs et auto reproductibles, dont on ne sait pas comment ils fonctionnent
r\'eellement, ni pourquoi, ne sont pas ais\'ement sp\'ecifi\'es par le mod\`ele th\'eorique actuel
de Machine de Turing Universelle, ou de Calculateur Universel ; en particulier les aspects de communications,
de r\`egles \'evolutives, d' \'ev\'enements al\'eatoires, \`a l'image du code g\'en\'etique,
ne sont pris en compte que par ajout d'artifices \`a la th\'eorie. Nous nous proposons ici de montrer
comment aborder ces probl\`emes en repensant le mod\`ele th\'eorique. Nous proposerons un mod\`ele
d'algorithme, appel\'e ici machine-\alpha qui contient et g\'en\'eralise les mod\`eles existants.
