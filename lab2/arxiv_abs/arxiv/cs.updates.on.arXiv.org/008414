The advice model of online computation captures the setting in which the online algorithm is given
some partial information concerning the request sequence. This paradigm allows to establish tradeoffs
between the amount of this additional information and the performance of the online algorithm.
However, unlike real life in which advice is a recommendation that we can chose to follow or to ignore
based on trustworthiness, in the current advice model, the online algorithm treats it as infallible.
This means that if the advice is corrupt or, worse, if it comes from a malicious source, the algorithm
may perform poorly. In this work, we study online computation in a setting in which the advice is provided
by an untrusted source. Our objective is to quantify the impact of untrusted advice so as to design
and analyze online algorithms that are resilient and perform well even when the advice is generated
in a malicious, adversarial manner. To this end, we focus on well-studied online problems such as
ski rental, online bidding, bin packing, and list update. For ski-rental and online bidding, we
show how to obtain algorithms that are Pareto-optimal with respect to the competitive ratios achieved;
this improves upon the framework of Purohit et al. [NeurIPS 2018] in which Pareto-optimality is
not necessarily guaranteed. For bin packing and list update, we give online algorithms with worst-case
tradeoffs in their competitiveness, depending on whether the advice is trusted or not; this is motivated
by work of Lykouris and Vassilvitskii [ICML 2018] on the paging problem, but in which the competitiveness
depends on the reliability of the advice. 