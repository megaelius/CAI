RUM (Reasoning with Uncertainty Module), is an integrated software tool based on a KEE, a frame system
implemented in an object oriented language. RUM's architecture is composed of three layers: representation,
inference, and control. The representation layer is based on frame-like data structures that capture
the uncertainty information used in the inference layer and the uncertainty meta-information
used in the control layer. The inference layer provides a selection of five T-norm based uncertainty
calculi with which to perform the intersection, detachment, union, and pooling of information.
The control layer uses the meta-information to select the appropriate calculus for each context
and to resolve eventual ignorance or conflict in the information. This layer also provides a context
mechanism that allows the system to focus on the relevant portion of the knowledge base, and an uncertain-belief
revision system that incrementally updates the certainty values of well-formed formulae (wffs)
in an acyclic directed deduction graph. RUM has been tested and validated in a sequence of experiments
in both naval and aerial situation assessment (SA), consisting of correlating reports and tracks,
locating and classifying platforms, and identifying intents and threats. An example of naval situation
assessment is illustrated. The testbed environment for developing these experiments has been
provided by LOTTA, a symbolic simulator implemented in Flavors. This simulator maintains time-varying
situations in a multi-player antagonistic game where players must make decisions in light of uncertain
and incomplete data. RUM has been used to assist one of the LOTTA players to perform the SA task. 