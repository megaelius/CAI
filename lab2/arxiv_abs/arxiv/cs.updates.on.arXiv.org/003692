Evolutionary Biologists have long struggled with the challenge of developing analysis workflows
in a flexible manner, thus facilitating the reuse of phylogenetic knowledge. An evolutionary biology
workflow can be viewed as a plan which composes web services that can retrieve, manipulate, and produce
phylogenetic trees. The Phylotastic project was launched two years ago as a collaboration between
evolutionary biologists and computer scientists, with the goal of developing an open architecture
to facilitate the creation of such analysis workflows. While composition of web services is a problem
that has been extensively explored in the literature, including within the logic programming domain,
the incarnation of the problem in Phylotastic provides a number of additional challenges. Along
with the need to integrate preferences and formal ontologies in the description of the desired workflow,
evolutionary biologists tend to construct workflows in an incremental manner, by successively
refining the workflow, by indicating desired changes (e.g., exclusion of certain services, modifications
of the desired output). This leads to the need of successive iterations of incremental replanning,
to develop a new workflow that integrates the requested changes while minimizing the changes to
the original workflow. This paper illustrates how Phylotastic has addressed the challenges of
creating and refining phylogenetic analysis workflows using logic programming technology and
how such solutions have been used within the general framework of the Phylotastic project. Under
consideration in Theory and Practice of Logic Programming (TPLP). 