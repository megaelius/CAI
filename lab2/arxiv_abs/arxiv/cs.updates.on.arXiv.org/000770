Let be given a graph $G=(V,E)$ whose edge set is partitioned into a set $R$ of \emph{red} edges and
a set $B$ of \emph{blue} edges, and assume that red edges are weighted and form a spanning tree of $G$.
Then, the \emph{Stackelberg Minimum Spanning Tree} (\stack) problem is that of pricing (i.e.,
weighting) the blue edges in such a way that the total weight of the blue edges selected in a minimum
spanning tree of the resulting graph is maximized. \stack \ is known to be \apx-hard already when
the number of distinct red weights is 2. In this paper we analyze some meaningful specializations
and generalizations of \stack, which shed some more light on the computational complexity of the
problem. More precisely, we first show that if $G$ is restricted to be \emph{complete}, then the
following holds: (i) if there are only 2 distinct red weights, then the problem can be solved optimally
(this contrasts with the corresponding \apx-hardness of the general problem); (ii) otherwise,
the problem can be approximated within $7/4 + \epsilon$, for any $\epsilon > 0$. Afterwards,
we define a natural extension of \stack, namely that in which blue edges have a non-negative \emph{activation
cost} associated, and it is given a global \emph{activation budget} that must not be exceeded when
pricing blue edges. Here, after showing that the very same approximation ratio as that of the original
problem can be achieved, we prove that if the spanning tree of red edges can be rooted so as that any
root-leaf path contains at most $h$ edges, then the problem admits a $(2h+\epsilon)$-approximation
algorithm, for any $\epsilon > 0$. 