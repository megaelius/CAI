LPMLN is a powerful knowledge representation and reasoning tool that combines the non-monotonic
reasoning ability of Answer Set Programming (ASP) and the probabilistic reasoning ability of Markov
Logic Networks (MLN). In this paper, we study the strong equivalence for LPMLN programs, which is
an important tool for program rewriting and theoretical investigations in the field of logic programming.First
of all, we present the notion of p-strong equivalence for LPMLN and present a model-theoretical
characterization for the notion. Then, we investigate several properties of the p-strong equivalence
from the following four aspects. Firstly, we investigate two relaxed notions of the p-strong equivalence
according to practical scenarios of program rewriting, and present corresponding characterizations
for the notions. Secondly, we analyze the computational complexities of deciding strong equivalences
for LPMLN programs. Thirdly, we investigate the relationships among the strong equivalences of
LPMLN and two extensions of ASP: ASP with weak constraints and ordered disjunctions. Finally, we
investigate LPMLN program simplification via the p-strong equivalence and present some syntactic
conditions that decide the p-strong equivalence between a single LPMLN rule and the empty program.
The contributions of the paper are as follows. Firstly, all of the results presented in this paper
provide a better understanding of LPMLN programming, which helps us further explore the properties
of LPMLN. Secondly, the relationships among the strong equivalences open a way to study the strong
equivalences for some logic formalisms by translating into LPMLN. Thirdly, the program simplification
can be used to enhance the implementations of the LPMLN solvers, which is expected to facilitate
the applications of LPMLN. 