We consider the following dynamic load-balancing process: given an underlying graph $G$ with $n$
nodes, in each step $t\geq 0$, one unit of load is created, and placed at a randomly chosen graph node.
In the same step, the chosen node picks a random neighbor, and the two nodes balance their loads by
averaging them. We are interested in the expected gap between the minimum and maximum loads at nodes
as the process progresses, and its dependence on $n$ and on the graph structure. Similar variants
of the above graphical balanced allocation process have been studied by Peres, Talwar, and Wieder,
and by Sauerwald and Sun for regular graphs. These authors left as open the question of characterizing
the gap in the case of \emph{cycle graphs} in the \emph{dynamic} case, where weights are created
during the algorithm's execution. For this case, the only known upper bound is of $\mathcal{O}(
n \log n )$, following from a majorization argument due to Peres, Talwar, and Wieder, which analyzes
a related graphical allocation process. In this paper, we provide an upper bound of $\mathcal{O}
( \sqrt n \log n )$ on the expected gap of the above process for cycles of length $n$. We introduce a new
potential analysis technique, which enables us to bound the difference in load between $k$-hop
neighbors on the cycle, for any $k \leq n / 2$. We complement this with a "gap covering" argument, which
bounds the maximum value of the gap by bounding its value across all possible subsets of a certain
structure, and recursively bounding the gaps within each subset. We provide analytical and experimental
evidence that our upper bound on the gap is tight up to a logarithmic factor. 