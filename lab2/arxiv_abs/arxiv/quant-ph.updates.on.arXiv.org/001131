A number of quantum processors consisting of a few tens of noisy qubits already exist, and are called
Noisy Intermediate-Scale Quantum (NISQ) devices. Their low number of qubits precludes the use
of quantum error correction procedures, and then only small-size quantum algorithms can be successfully
run. These quantum algorithms need to be compiled to respect the constraints imposed by the quantum
processor, known as the mapping or routing problem. The mapping will result in an increase of the
number of gates and circuit depth, decreasing the algorithm's success rate. In this paper, we present
a mapper called Qmap that makes quantum circuits executable on the Surface-17 processor, a scalable
processor with a surface code architecture. It takes into account not only the elementary gate set
and qubit connectivity constraints but also the restrictions imposed by the use of shared classical
control, which have not been considered so far. Qmap is embedded in the OpenQL compiler and uses a
configuration file where the processor's characteristics are described and that makes it capable
of targeting different quantum processors. To show this flexibility and evaluate its performance,
we map 56 quantum benchmarks on two different superconducting quantum processors, the Surface-17
(17 qubits) and the IBM Q Tokyo (20 qubits), while using different routing strategies. We show that
the best router can reduce the resulting overhead up to 80% (72%) for the number of gates and up to 71.4%
(66.7%) for the circuit latency (depth) on the Surface-17 (IBM Q Tokyo) when compared to the baseline
(trivial router). In addition, having a slightly higher qubit connectivity helps to decrease the
number of inserted movement operations (up to 82.3%). Finally, we analyze how the mapping affects
the reliability of some small quantum circuits. Their fidelity shows a decrease that ranges from
1.8% to 13.8%. 