Here we explore which heuristic quantum algorithms for combinatorial optimization might be most
practical to try out on a small fault-tolerant quantum computer. We compile circuits for several
variants of quantum accelerated simulated annealing including those using qubitization or Szegedy
walks to quantize classical Markov chains and those simulating spectral gap amplified Hamiltonians
encoding a Gibbs state. We also optimize fault-tolerant realizations of the adiabatic algorithm,
quantum enhanced population transfer, the quantum approximate optimization algorithm, and other
approaches. Many of these methods are bottlenecked by calls to the same subroutines; thus, optimized
circuits for those primitives should be of interest regardless of which heuristic is most effective
in practice. We compile these bottlenecks for several families of optimization problems and report
for how long and for what size systems one can perform these heuristics in the surface code given a
range of resource budgets. Our results discourage the notion that any quantum optimization heuristic
realizing only a quadratic speedup will achieve an advantage over classical algorithms on modest
superconducting qubit surface code processors without significant improvements in the implementation
of the surface code. For instance, under quantum-favorable assumptions (e.g., that the quantum
algorithm requires exactly quadratically fewer steps), our analysis suggests that quantum accelerated
simulated annealing would require roughly a day and a million physical qubits to optimize spin glasses
that could be solved by classical simulated annealing in about four CPU-minutes. 