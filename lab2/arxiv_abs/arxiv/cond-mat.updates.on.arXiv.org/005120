The recent groundbreaking demonstration of quantum supremacy in the noisy intermediate scale
quantum (NISQ) era has led to an intense activity in establishing finer boundaries between classical
and quantum computing. In this paper, we use quantum Monte Carlo (QMC) techniques to formulate a
systematic procedure for translating any sequence of $d$ quantum gates acting on $n$ q-bits into
a Boltzmann machine (BM) having $n+g(d)$ classical spins or p-bits with two values "0" and "1", but
with a complex energy function $E$. Using this procedure we emulate Shor's algorithm with up to $36$
q-bits using $90$ p-bits, on an ordinary laptop computer in less than a day, while a naive Schr\"{o}dinger
implementation would require multiplying matrices with $\approx 10^{21}$ elements. Even larger
problems should be accessible on dedicated Ising Machines. However, we also identify clear limitations
of the probabilistic approach by introducing a quantitative metric $S_{\text{Total}}$ for its
inefficiency relative to a quantum computer. For example, a straightforward probabilistic implementation
of Shor's algorithm with $n$ q-bits leads to an $S_{\text{Total}} \sim \exp{(-n/2)}$, making the
computation time for the probabilistic Shor's algorithm scale exponentially as $2^{n/2}$ instead
of the polynomial scaling expected for true quantum computers. This is a manifestation of the well-known
sign problem in QMC and it may be possible to "tame" it with appropriate transformations. Finally,
we present an example featuring a standard optimization algorithm based on a purely real energy
function to which we add an imaginary part $\Im{(E)}$, thereby augmenting the statistical suppression
of Feynman paths with quantum-like phase cancellation. This example illustrates how the sign problem
encountered in classical annealers can potentially be turned into a computational resource for
quantum annealers. 